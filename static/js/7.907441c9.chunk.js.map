{"version":3,"sources":["../../../../src/elements/content-sidebar/withErrorHandling.js","../../../../src/components/collapsible/Collapsible.js","../node_modules/react-animate-height/lib/AnimateHeight.js","../node_modules/react-textarea-autosize/dist/react-textarea-autosize.esm.browser.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/lodash/isFinite.js","../node_modules/react-process-string/dist/index.js","../node_modules/filesize/lib/filesize.js","../../../../src/icons/general/IconEye.js","../../../../src/icons/general/IconComment.js","../../../../src/icons/general/IconPencilSolid.js","../../../../src/features/access-stats/messages.js","../../../../src/features/access-stats/AccessStatsItem.js","../../../../src/features/access-stats/AccessStatsItemsList.js","../../../../src/features/access-stats/AccessStats.js","../../../../src/elements/content-sidebar/SidebarAccessStats.js","../../../../src/icons/general/IconSecurityClassification.js","../../../../src/features/security/SecurityBadge.js","../../../../src/features/classification/ClassifiedBadge.js","../../../../src/features/classification/messages.js","../../../../src/features/classification/Classification.js","../../../../src/features/classification/EditClassificationButton.js","../../../../src/elements/content-sidebar/SidebarClassification.js","../../../../src/features/item-details/messages.js","../../../../src/features/item-details/EditableDescription.js","../../../../src/features/item-details/EditableURL.js","../../../../src/features/item-details/RetentionPolicy.js","../../../../src/features/item-details/ReadonlyDescription.js","../../../../src/features/item-details/ItemProperties.js","../../../src/utils/getFileSize.js","../../../../src/elements/content-sidebar/SidebarFileProperties.js","../../../../src/features/item-details/SharedLinkExpirationNotice.js","../../../../src/features/item-details/ItemExpirationNotice.js","../../../../src/elements/content-sidebar/SidebarNotices.js","../../../../src/features/item-details/VersionHistoryLink.js","../../../../src/elements/content-sidebar/SidebarVersions.js","../../../../src/elements/content-sidebar/DetailsSidebar.js"],"names":["WrappedComponent","maskError","inlineError","rest","errorCode","errorHeader","errorSubHeader","undefined","title","Collapsible","onOpen","onClose","prevState","isOpen","props","this","animationDuration","buttonProps","children","className","isBordered","hasStickyHeader","headerActionItems","sectionClassName","classNames","interactionTarget","modifiedButtonProps","omit","buttonClassName","onClick","type","color","width","duration","height","React","Object","defineProperty","exports","value","_typeof","Symbol","iterator","obj","constructor","prototype","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","require","_propTypes2","_classnames2","__esModule","default","_defineProperty","ANIMATION_STATE_CLASSES","animating","animatingUp","animatingDown","animatingToHeightZero","animatingToHeightAuto","animatingToHeightSpecific","static","staticHeightZero","staticHeightAuto","staticHeightSpecific","PROPS_TO_OMIT","_len","keys","Array","_key","res","objectKeys","indexOf","cancelAnimationFrames","requestAnimationFrameIDs","forEach","id","cancelAnimationFrame","isNumber","n","isNaN","parseFloat","isFinite","isPercentage","search","substr","runCallback","callback","params","AnimateHeight","_React$Component","instance","TypeError","_classCallCheck","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","animationFrameIDs","overflow","animationStateClasses","getStaticStateClasses","state","shouldUseTransitions","subClass","superClass","create","setPrototypeOf","_inherits","contentElement","style","hideContent","prevProps","_this2","_props","delay","onAnimationEnd","onAnimationStart","_cx","showContent","contentHeight","offsetHeight","totalDuration","newHeight","timeoutState","isCurrentHeightAuto","timeoutAnimationStateClasses","setState","clearTimeout","timeoutID","animationClassesTimeoutID","requestAnimationFrame","startAnimationHelper","setTimeout","display","_cx2","_cx3","_this3","_props2","animateOpacity","applyInlineTransitions","contentClassName","easing","_state","componentStyle","transition","WebkitTransition","contentStyle","opacity","componentClasses","createElement","apply","concat","ref","el","Component","propTypes","bool","object","any","isRequired","string","number","propName","componentName","func","defaultProps","isIE","document","documentElement","currentStyle","HIDDEN_TEXTAREA_STYLE","visibility","position","top","right","SIZING_STYLE","computedStyleCache","hiddenTextarea","forceHiddenStyles","node","setProperty","calculateNodeHeight","uiTextNode","uid","useCache","minRows","maxRows","parentNode","body","appendChild","nodeStyling","window","getComputedStyle","sizingStyle","reduce","name","getPropertyValue","boxSizing","paddingSize","borderSize","nodeInfo","calculateNodeStyling","placeholder","minHeight","Infinity","maxHeight","scrollHeight","singleRowHeight","valueRowCount","Math","floor","max","min","rowCount","setAttribute","noop","TextareaAutosize","_onRef","_ref","inputRef","current","_onChange","event","_controlled","_resizeComponent","onChange","_assertThisInitialized","nodeHeight","_uid","useCacheForDOMMeasurements","_resizeLock","_inheritsLoose","_proto","render","_this$props","onHeightChange","_objectWithoutPropertiesLoose","componentDidMount","_resizeListener","addEventListener","componentDidUpdate","componentWillUnmount","removeEventListener","purgeCache","nativeIsFinite","module","options","input","isArray","option","processInputWithRegex","fn","regex","RegExp","result","output","exec","index","match","push","substring","lastIndex","map","chunk","global","b","symbol","iec","bits","bytes","jedec","fullform","filesize","arg","val","e","base","ceil","full","fullforms","locale","localeOptions","neg","num","round","unix","separator","spacer","standard","symbols","exponent","Number","log","pow","toFixed","charAt","replace","test","toLocaleString","toString","join","partial","opt","viewBox","d","fill","defineMessages","accessStatsViewDetails","accessStatsViews","accessStatsPreviews","accessStatsEdits","accessStatsComments","accessStatsDownloads","statsAttributesTable","preview","icon","message","messages","view","download","comment","edit","count","hasCountOverflowed","openAccessStatsModal","statButtonProps","statAttributes","IconComponent","labelMessage","itemContent","commentCount","commentStatButtonProps","downloadCount","downloadStatButtonProps","editCount","editStatButtonProps","isBoxNote","previewCount","previewStatButtonProps","viewStatButtonProps","errorMessage","viewMoreButtonProps","withErrorHandling","injectIntl","onAccessStatsClick","accessStats","has_count_overflowed","file","error","intl","preview_count","comment_count","download_count","edit_count","SECTION_TARGETS","DETAILS_TARGETS","bdlGray","strokeWidth","classes","stroke","strokeLinecap","strokeLinejoin","SecurityBadge","tooltipPosition","tooltipText","isClickable","isTooltipDisabled","badge","isDisabled","isTabbable","text","data-resin-target","add","classification","definition","missing","messageStyle","isClassified","hasDefinition","isTooltipMessageEnabled","isInlineMessageEnabled","isNotClassifiedMessageVisible","isEditing","onEdit","interaction","isEditable","getProp","hasClassification","classificationMessages","bookmarkExpiration","created","deleted","description","descriptionPlaceholder","enterpriseOwner","fileExpiration","folderExpiration","modified","owner","retentionPolicyDescription","retentionPolicyExpiration","retentionPolicyExtend","savedVersions","sharedLinkExpiration","size","uploader","url","urlPlaceholder","EditableDescription","prevValue","textAreaProps","maxLength","onBlur","errorMap","commonMessages","EditableURL","valid","valueMissing","formatMessage","hideLabel","label","onFocus","datetimeOptions","day","month","year","dispositionTime","openModal","policyType","tagName","Date","NEWLINE_REGEX","URL_REGEX","ReadonlyDescription","href","rel","PropTypes","hour","minute","ItemProperties","createdAt","descriptionTextareaProps","modifiedAt","onDescriptionChange","onValidURLChange","retentionPolicyProps","trashedAt","descriptionId","uniqueid","defaultDigitalUnits","bcp47TagToDigitalUnits","fi","fr","ru","settings","localizedUnits","hasRetentionPolicy","retentionPolicy","onRetentionPolicyExtendClick","isLoading","getFileSize","SharedLinkExpirationNotice","expiration","values","ItemExpirationNotice","messageID","itemType","NOTICE_DATE_FORMAT","itemExpiration","date","addTime","dateFormat","relative","VersionHistoryLink","versionCount","formattedMessageComponent","onVersionHistoryClick","version_number","versionNumber","parseInt","MARK_NAME_JS_READY","mark","DetailsSidebar","fileError","content","defaultInlineErrorContentMessage","api","getBadItemError","newDescription","isForbidden","accessStatsError","fileAccessStatsPermissionsError","defaultErrorMaskSubHeaderMessage","isLoadingAccessStats","logger","endMarkName","prevHasAccessStats","hasAccessStats","successCallback","fetchFileSuccessCallback","errorCallback","fetchFileErrorCallback","fileId","fields","elementId","hasProperties","hasNotices","hasVersions","onClassificationClick","sidebarView","PureComponent","onError","flow","withLogger","withErrorBoundary"],"mappings":"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","file":"static/js/7.907441c9.chunk.js","sourcesContent":["/**\n * @flow\n * @file withErrorHandling higher order component\n * @author Box\n */\n\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport ErrorMask from '../../components/error-mask/ErrorMask';\nimport InlineError from '../../components/inline-error/InlineError';\n\nimport SidebarSection from './SidebarSection';\n\ntype Props = {\n    errorCode?: string,\n} & Errors;\n\nconst withErrorHandling = (WrappedComponent: React.ComponentType<any>) => ({\n    maskError,\n    inlineError,\n    errorCode,\n    ...rest\n}: Props) => {\n    if (maskError) {\n        return (\n            <SidebarSection>\n                <ErrorMask\n                    errorHeader={<FormattedMessage {...maskError.errorHeader} />}\n                    errorSubHeader={\n                        maskError.errorSubHeader ? <FormattedMessage {...maskError.errorSubHeader} /> : undefined\n                    }\n                />\n            </SidebarSection>\n        );\n    }\n    if (inlineError) {\n        return (\n            <>\n                <InlineError title={<FormattedMessage {...inlineError.title} />}>\n                    {<FormattedMessage {...inlineError.content} />}\n                </InlineError>\n                <WrappedComponent {...rest} />\n            </>\n        );\n    }\n\n    return <WrappedComponent {...rest} />;\n};\n\nexport default withErrorHandling;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'lodash/omit';\nimport AnimateHeight from 'react-animate-height';\n\nimport { RESIN_TAG_TARGET } from '../../common/variables';\nimport IconCaretDown from '../../icons/general/IconCaretDown';\nimport PlainButton from '../plain-button';\nimport { bdlGray50 } from '../../styles/variables';\n\nimport './Collapsible.scss';\n\ntype Props = {\n    /** Duration of animation (milliseconds) */\n    animationDuration?: number,\n    /** Other props (e.g. resin target names) to be included in the button */\n    buttonProps?: Object,\n    /** Content to be displayed in the card if it's expanded */\n    children: React.Node,\n    /** CSS class for the wrapper div */\n    className?: string,\n    /** Determines look of component */\n    hasStickyHeader?: boolean,\n    /** Determines stickiness of the header */\n    headerActionItems?: React.Node,\n    /** Determines optional header action items */\n    isBordered?: boolean,\n    /** Initial state of the collapsible card */\n    isOpen: boolean,\n    /** callback called when collapsible is opened */\n    onClose?: Function,\n    /** callback called when collapsible is collapsed */\n    onOpen?: Function,\n    /** Title string or component */\n    title: string | React.Node,\n};\n\ntype State = {\n    isOpen: boolean,\n};\n\nclass Collapsible extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        buttonProps: {},\n        className: '',\n        isOpen: true,\n        animationDuration: 100,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isOpen: props.isOpen,\n        };\n    }\n\n    toggleVisibility = () => {\n        const { onOpen, onClose } = this.props;\n        this.setState(\n            prevState => ({\n                isOpen: !prevState.isOpen,\n            }),\n            () => {\n                const { isOpen } = this.state;\n                if (isOpen && onOpen) {\n                    onOpen(this);\n                } else if (!isOpen && onClose) {\n                    onClose(this);\n                }\n            },\n        );\n    };\n\n    render() {\n        const { isOpen }: State = this.state;\n        const {\n            animationDuration,\n            buttonProps = {},\n            children,\n            className,\n            isBordered,\n            hasStickyHeader,\n            headerActionItems,\n            title,\n        }: Props = this.props;\n\n        const sectionClassName = classNames(\n            'collapsible-card',\n            {\n                'is-open': isOpen,\n            },\n            {\n                'is-bordered': isBordered,\n            },\n            className,\n        );\n        const interactionTarget = buttonProps[RESIN_TAG_TARGET];\n        const modifiedButtonProps = omit(buttonProps, [RESIN_TAG_TARGET]);\n        const buttonClassName = hasStickyHeader\n            ? 'collapsible-card-header has-sticky-header'\n            : 'collapsible-card-header';\n\n        if (interactionTarget) {\n            modifiedButtonProps[RESIN_TAG_TARGET] = `${interactionTarget}${isOpen ? 'collapse' : 'expand'}`;\n        }\n\n        return (\n            <div className={sectionClassName}>\n                <div className={buttonClassName}>\n                    <PlainButton\n                        {...modifiedButtonProps}\n                        className=\"collapsible-card-title\"\n                        onClick={this.toggleVisibility}\n                        type=\"button\"\n                    >\n                        {title}\n                        <IconCaretDown className=\"collapsible-card-header-caret\" color={bdlGray50} width={8} />\n                    </PlainButton>\n                    {isOpen && headerActionItems}\n                </div>\n                <AnimateHeight duration={animationDuration} height={isOpen ? 'auto' : 0}>\n                    <div className=\"collapsible-card-content\">{children}</div>\n                </AnimateHeight>\n            </div>\n        );\n    }\n}\n\nexport default Collapsible;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ANIMATION_STATE_CLASSES = {\n  animating: 'rah-animating',\n  animatingUp: 'rah-animating--up',\n  animatingDown: 'rah-animating--down',\n  animatingToHeightZero: 'rah-animating--to-height-zero',\n  animatingToHeightAuto: 'rah-animating--to-height-auto',\n  animatingToHeightSpecific: 'rah-animating--to-height-specific',\n  static: 'rah-static',\n  staticHeightZero: 'rah-static--height-zero',\n  staticHeightAuto: 'rah-static--height-auto',\n  staticHeightSpecific: 'rah-static--height-specific'\n};\n\nvar PROPS_TO_OMIT = ['animateOpacity', 'animationStateClasses', 'applyInlineTransitions', 'children', 'contentClassName', 'delay', 'duration', 'easing', 'height', 'onAnimationEnd', 'onAnimationStart'];\n\nfunction omit(obj) {\n  for (var _len = arguments.length, keys = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    keys[_key - 1] = arguments[_key];\n  }\n\n  if (!keys.length) {\n    return obj;\n  }\n\n  var res = {};\n  var objectKeys = Object.keys(obj);\n\n  for (var i = 0; i < objectKeys.length; i++) {\n    var key = objectKeys[i];\n\n    if (keys.indexOf(key) === -1) {\n      res[key] = obj[key];\n    }\n  }\n\n  return res;\n}\n\n// Start animation helper using nested requestAnimationFrames\nfunction startAnimationHelper(callback) {\n  var requestAnimationFrameIDs = [];\n\n  requestAnimationFrameIDs[0] = requestAnimationFrame(function () {\n    requestAnimationFrameIDs[1] = requestAnimationFrame(function () {\n      callback();\n    });\n  });\n\n  return requestAnimationFrameIDs;\n}\n\nfunction cancelAnimationFrames(requestAnimationFrameIDs) {\n  requestAnimationFrameIDs.forEach(function (id) {\n    return cancelAnimationFrame(id);\n  });\n}\n\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nfunction isPercentage(height) {\n  // Percentage height\n  return typeof height === 'string' && height.search('%') === height.length - 1 && isNumber(height.substr(0, height.length - 1));\n}\n\nfunction runCallback(callback, params) {\n  if (callback && typeof callback === 'function') {\n    callback(params);\n  }\n}\n\nvar AnimateHeight = function (_React$Component) {\n  _inherits(AnimateHeight, _React$Component);\n\n  function AnimateHeight(props) {\n    _classCallCheck(this, AnimateHeight);\n\n    var _this = _possibleConstructorReturn(this, (AnimateHeight.__proto__ || Object.getPrototypeOf(AnimateHeight)).call(this, props));\n\n    _this.animationFrameIDs = [];\n\n    var height = 'auto';\n    var overflow = 'visible';\n\n    if (isNumber(props.height)) {\n      // If value is string \"0\" make sure we convert it to number 0\n      height = props.height < 0 || props.height === '0' ? 0 : props.height;\n      overflow = 'hidden';\n    } else if (isPercentage(props.height)) {\n      // If value is string \"0%\" make sure we convert it to number 0\n      height = props.height === '0%' ? 0 : props.height;\n      overflow = 'hidden';\n    }\n\n    _this.animationStateClasses = _extends({}, ANIMATION_STATE_CLASSES, props.animationStateClasses);\n\n    var animationStateClasses = _this.getStaticStateClasses(height);\n\n    _this.state = {\n      animationStateClasses: animationStateClasses,\n      height: height,\n      overflow: overflow,\n      shouldUseTransitions: false\n    };\n    return _this;\n  }\n\n  _createClass(AnimateHeight, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var height = this.state.height;\n\n      // Hide content if height is 0 (to prevent tabbing into it)\n      // Check for contentElement is added cause this would fail in tests (react-test-renderer)\n      // Read more here: https://github.com/Stanko/react-animate-height/issues/17\n\n      if (this.contentElement && this.contentElement.style) {\n        this.hideContent(height);\n      }\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var _props = this.props,\n          delay = _props.delay,\n          duration = _props.duration,\n          height = _props.height,\n          onAnimationEnd = _props.onAnimationEnd,\n          onAnimationStart = _props.onAnimationStart;\n\n      // Check if 'height' prop has changed\n\n      if (this.contentElement && height !== prevProps.height) {\n        var _cx;\n\n        // Remove display: none from the content div\n        // if it was hidden to prevent tabbing into it\n        this.showContent(prevState.height);\n\n        // Cache content height\n        this.contentElement.style.overflow = 'hidden';\n        var contentHeight = this.contentElement.offsetHeight;\n        this.contentElement.style.overflow = '';\n\n        // set total animation time\n        var totalDuration = duration + delay;\n\n        var newHeight = null;\n        var timeoutState = {\n          height: null, // it will be always set to either 'auto' or specific number\n          overflow: 'hidden'\n        };\n        var isCurrentHeightAuto = prevState.height === 'auto';\n\n        if (isNumber(height)) {\n          // If value is string \"0\" make sure we convert it to number 0\n          newHeight = height < 0 || height === '0' ? 0 : height;\n          timeoutState.height = newHeight;\n        } else if (isPercentage(height)) {\n          // If value is string \"0%\" make sure we convert it to number 0\n          newHeight = height === '0%' ? 0 : height;\n          timeoutState.height = newHeight;\n        } else {\n          // If not, animate to content height\n          // and then reset to auto\n          newHeight = contentHeight; // TODO solve contentHeight = 0\n          timeoutState.height = 'auto';\n          timeoutState.overflow = null;\n        }\n\n        if (isCurrentHeightAuto) {\n          // This is the height to be animated to\n          timeoutState.height = newHeight;\n\n          // If previous height was 'auto'\n          // set starting height explicitly to be able to use transition\n          newHeight = contentHeight;\n        }\n\n        // Animation classes\n        var animationStateClasses = (0, _classnames2.default)((_cx = {}, _defineProperty(_cx, this.animationStateClasses.animating, true), _defineProperty(_cx, this.animationStateClasses.animatingUp, prevProps.height === 'auto' || height < prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingDown, height === 'auto' || height > prevProps.height), _defineProperty(_cx, this.animationStateClasses.animatingToHeightZero, timeoutState.height === 0), _defineProperty(_cx, this.animationStateClasses.animatingToHeightAuto, timeoutState.height === 'auto'), _defineProperty(_cx, this.animationStateClasses.animatingToHeightSpecific, timeoutState.height > 0), _cx));\n\n        // Animation classes to be put after animation is complete\n        var timeoutAnimationStateClasses = this.getStaticStateClasses(timeoutState.height);\n\n        // Set starting height and animating classes\n        // We are safe to call set state as it will not trigger infinite loop\n        // because of the \"height !== prevProps.height\" check\n        this.setState({ // eslint-disable-line react/no-did-update-set-state\n          animationStateClasses: animationStateClasses,\n          height: newHeight,\n          overflow: 'hidden',\n          // When animating from 'auto' we first need to set fixed height\n          // that change should be animated\n          shouldUseTransitions: !isCurrentHeightAuto\n        });\n\n        // Clear timeouts\n        clearTimeout(this.timeoutID);\n        clearTimeout(this.animationClassesTimeoutID);\n\n        if (isCurrentHeightAuto) {\n          // When animating from 'auto' we use a short timeout to start animation\n          // after setting fixed height above\n          timeoutState.shouldUseTransitions = true;\n\n          cancelAnimationFrames(this.animationFrameIDs);\n          this.animationFrameIDs = startAnimationHelper(function () {\n            _this2.setState(timeoutState);\n\n            // ANIMATION STARTS, run a callback if it exists\n            runCallback(onAnimationStart, { newHeight: timeoutState.height });\n          });\n\n          // Set static classes and remove transitions when animation ends\n          this.animationClassesTimeoutID = setTimeout(function () {\n            _this2.setState({\n              animationStateClasses: timeoutAnimationStateClasses,\n              shouldUseTransitions: false\n            });\n\n            // ANIMATION ENDS\n            // Hide content if height is 0 (to prevent tabbing into it)\n            _this2.hideContent(timeoutState.height);\n            // Run a callback if it exists\n            runCallback(onAnimationEnd, { newHeight: timeoutState.height });\n          }, totalDuration);\n        } else {\n          // ANIMATION STARTS, run a callback if it exists\n          runCallback(onAnimationStart, { newHeight: newHeight });\n\n          // Set end height, classes and remove transitions when animation is complete\n          this.timeoutID = setTimeout(function () {\n            timeoutState.animationStateClasses = timeoutAnimationStateClasses;\n            timeoutState.shouldUseTransitions = false;\n\n            _this2.setState(timeoutState);\n\n            // ANIMATION ENDS\n            // If height is auto, don't hide the content\n            // (case when element is empty, therefore height is 0)\n            if (height !== 'auto') {\n              // Hide content if height is 0 (to prevent tabbing into it)\n              _this2.hideContent(newHeight); // TODO solve newHeight = 0\n            }\n            // Run a callback if it exists\n            runCallback(onAnimationEnd, { newHeight: newHeight });\n          }, totalDuration);\n        }\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      cancelAnimationFrames(this.animationFrameIDs);\n\n      clearTimeout(this.timeoutID);\n      clearTimeout(this.animationClassesTimeoutID);\n\n      this.timeoutID = null;\n      this.animationClassesTimeoutID = null;\n      this.animationStateClasses = null;\n    }\n  }, {\n    key: 'showContent',\n    value: function showContent(height) {\n      if (height === 0) {\n        this.contentElement.style.display = '';\n      }\n    }\n  }, {\n    key: 'hideContent',\n    value: function hideContent(newHeight) {\n      if (newHeight === 0) {\n        this.contentElement.style.display = 'none';\n      }\n    }\n  }, {\n    key: 'getStaticStateClasses',\n    value: function getStaticStateClasses(height) {\n      var _cx2;\n\n      return (0, _classnames2.default)((_cx2 = {}, _defineProperty(_cx2, this.animationStateClasses.static, true), _defineProperty(_cx2, this.animationStateClasses.staticHeightZero, height === 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightSpecific, height > 0), _defineProperty(_cx2, this.animationStateClasses.staticHeightAuto, height === 'auto'), _cx2));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _cx3,\n          _this3 = this;\n\n      var _props2 = this.props,\n          animateOpacity = _props2.animateOpacity,\n          applyInlineTransitions = _props2.applyInlineTransitions,\n          children = _props2.children,\n          className = _props2.className,\n          contentClassName = _props2.contentClassName,\n          duration = _props2.duration,\n          easing = _props2.easing,\n          delay = _props2.delay,\n          style = _props2.style;\n      var _state = this.state,\n          height = _state.height,\n          overflow = _state.overflow,\n          animationStateClasses = _state.animationStateClasses,\n          shouldUseTransitions = _state.shouldUseTransitions;\n\n\n      var componentStyle = _extends({}, style, {\n        height: height,\n        overflow: overflow || style.overflow\n      });\n\n      if (shouldUseTransitions && applyInlineTransitions) {\n        componentStyle.transition = 'height ' + duration + 'ms ' + easing + ' ' + delay + 'ms';\n\n        // Include transition passed through styles\n        if (style.transition) {\n          componentStyle.transition = style.transition + ', ' + componentStyle.transition;\n        }\n\n        // Add webkit vendor prefix still used by opera, blackberry...\n        componentStyle.WebkitTransition = componentStyle.transition;\n      }\n\n      var contentStyle = {};\n\n      if (animateOpacity) {\n        contentStyle.transition = 'opacity ' + duration + 'ms ' + easing + ' ' + delay + 'ms';\n        // Add webkit vendor prefix still used by opera, blackberry...\n        contentStyle.WebkitTransition = contentStyle.transition;\n\n        if (height === 0) {\n          contentStyle.opacity = 0;\n        }\n      }\n\n      var componentClasses = (0, _classnames2.default)((_cx3 = {}, _defineProperty(_cx3, animationStateClasses, true), _defineProperty(_cx3, className, className), _cx3));\n\n      return _react2.default.createElement(\n        'div',\n        _extends({}, omit.apply(undefined, [this.props].concat(PROPS_TO_OMIT)), {\n          'aria-hidden': height === 0,\n          className: componentClasses,\n          style: componentStyle\n        }),\n        _react2.default.createElement(\n          'div',\n          {\n            className: contentClassName,\n            style: contentStyle,\n            ref: function ref(el) {\n              return _this3.contentElement = el;\n            }\n          },\n          children\n        )\n      );\n    }\n  }]);\n\n  return AnimateHeight;\n}(_react2.default.Component);\n\nvar heightPropType = function heightPropType(props, propName, componentName) {\n  var value = props[propName];\n\n  if (typeof value === 'number' && value >= 0 || isPercentage(value) || value === 'auto') {\n    return null;\n  }\n\n  return new TypeError('value \"' + value + '\" of type \"' + (typeof value === 'undefined' ? 'undefined' : _typeof(value)) + '\" is invalid type for ' + propName + ' in ' + componentName + '. ' + 'It needs to be a positive number, string \"auto\" or percentage string (e.g. \"15%\").');\n};\n\nAnimateHeight.propTypes = {\n  animateOpacity: _propTypes2.default.bool,\n  animationStateClasses: _propTypes2.default.object,\n  applyInlineTransitions: _propTypes2.default.bool,\n  children: _propTypes2.default.any.isRequired,\n  className: _propTypes2.default.string,\n  contentClassName: _propTypes2.default.string,\n  duration: _propTypes2.default.number,\n  delay: _propTypes2.default.number,\n  easing: _propTypes2.default.string,\n  height: heightPropType,\n  onAnimationEnd: _propTypes2.default.func,\n  onAnimationStart: _propTypes2.default.func,\n  style: _propTypes2.default.object\n};\n\nAnimateHeight.defaultProps = {\n  animateOpacity: false,\n  animationStateClasses: ANIMATION_STATE_CLASSES,\n  applyInlineTransitions: true,\n  duration: 250,\n  delay: 0,\n  easing: 'ease',\n  style: {}\n};\n\nexports.default = AnimateHeight;","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport { createElement, Component } from 'react';\nimport { oneOfType, func, shape, any, number, object, bool, string } from 'prop-types';\n\nvar isIE =  !!document.documentElement.currentStyle ;\nvar HIDDEN_TEXTAREA_STYLE = {\n  'min-height': '0',\n  'max-height': 'none',\n  height: '0',\n  visibility: 'hidden',\n  overflow: 'hidden',\n  position: 'absolute',\n  'z-index': '-1000',\n  top: '0',\n  right: '0'\n};\nvar SIZING_STYLE = ['letter-spacing', 'line-height', 'font-family', 'font-weight', 'font-size', 'font-style', 'tab-size', 'text-rendering', 'text-transform', 'width', 'text-indent', 'padding-top', 'padding-right', 'padding-bottom', 'padding-left', 'border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width', 'box-sizing'];\nvar computedStyleCache = {};\nvar hiddenTextarea =  document.createElement('textarea');\n\nvar forceHiddenStyles = function forceHiddenStyles(node) {\n  Object.keys(HIDDEN_TEXTAREA_STYLE).forEach(function (key) {\n    node.style.setProperty(key, HIDDEN_TEXTAREA_STYLE[key], 'important');\n  });\n};\n\n{\n  hiddenTextarea.setAttribute('tab-index', '-1');\n  hiddenTextarea.setAttribute('aria-hidden', 'true');\n  forceHiddenStyles(hiddenTextarea);\n}\n\nfunction calculateNodeHeight(uiTextNode, uid, useCache, minRows, maxRows) {\n  if (useCache === void 0) {\n    useCache = false;\n  }\n\n  if (minRows === void 0) {\n    minRows = null;\n  }\n\n  if (maxRows === void 0) {\n    maxRows = null;\n  }\n\n  if (hiddenTextarea.parentNode === null) {\n    document.body.appendChild(hiddenTextarea);\n  } // Copy all CSS properties that have an impact on the height of the content in\n  // the textbox\n\n\n  var nodeStyling = calculateNodeStyling(uiTextNode, uid, useCache);\n\n  if (nodeStyling === null) {\n    return null;\n  }\n\n  var paddingSize = nodeStyling.paddingSize,\n      borderSize = nodeStyling.borderSize,\n      boxSizing = nodeStyling.boxSizing,\n      sizingStyle = nodeStyling.sizingStyle; // Need to have the overflow attribute to hide the scrollbar otherwise\n  // text-lines will not calculated properly as the shadow will technically be\n  // narrower for content\n\n  Object.keys(sizingStyle).forEach(function (key) {\n    hiddenTextarea.style[key] = sizingStyle[key];\n  });\n  forceHiddenStyles(hiddenTextarea);\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || 'x';\n  var minHeight = -Infinity;\n  var maxHeight = Infinity;\n  var height = hiddenTextarea.scrollHeight;\n\n  if (boxSizing === 'border-box') {\n    // border-box: add border, since height = content + padding + border\n    height = height + borderSize;\n  } else if (boxSizing === 'content-box') {\n    // remove padding, since height = content\n    height = height - paddingSize;\n  } // measure height of a textarea with a single row\n\n\n  hiddenTextarea.value = 'x';\n  var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize; // Stores the value's rows count rendered in `hiddenTextarea`,\n  // regardless if `maxRows` or `minRows` props are passed\n\n  var valueRowCount = Math.floor(height / singleRowHeight);\n\n  if (minRows !== null) {\n    minHeight = singleRowHeight * minRows;\n\n    if (boxSizing === 'border-box') {\n      minHeight = minHeight + paddingSize + borderSize;\n    }\n\n    height = Math.max(minHeight, height);\n  }\n\n  if (maxRows !== null) {\n    maxHeight = singleRowHeight * maxRows;\n\n    if (boxSizing === 'border-box') {\n      maxHeight = maxHeight + paddingSize + borderSize;\n    }\n\n    height = Math.min(maxHeight, height);\n  }\n\n  var rowCount = Math.floor(height / singleRowHeight);\n  return {\n    height: height,\n    minHeight: minHeight,\n    maxHeight: maxHeight,\n    rowCount: rowCount,\n    valueRowCount: valueRowCount\n  };\n}\n\nfunction calculateNodeStyling(node, uid, useCache) {\n  if (useCache === void 0) {\n    useCache = false;\n  }\n\n  if (useCache && computedStyleCache[uid]) {\n    return computedStyleCache[uid];\n  }\n\n  var style = window.getComputedStyle(node);\n\n  if (style === null) {\n    return null;\n  }\n\n  var sizingStyle = SIZING_STYLE.reduce(function (obj, name) {\n    obj[name] = style.getPropertyValue(name);\n    return obj;\n  }, {});\n  var boxSizing = sizingStyle['box-sizing']; // probably node is detached from DOM, can't read computed dimensions\n\n  if (boxSizing === '') {\n    return null;\n  } // IE (Edge has already correct behaviour) returns content width as computed width\n  // so we need to add manually padding and border widths\n\n\n  if (isIE && boxSizing === 'border-box') {\n    sizingStyle.width = parseFloat(sizingStyle.width) + parseFloat(style['border-right-width']) + parseFloat(style['border-left-width']) + parseFloat(style['padding-right']) + parseFloat(style['padding-left']) + 'px';\n  }\n\n  var paddingSize = parseFloat(sizingStyle['padding-bottom']) + parseFloat(sizingStyle['padding-top']);\n  var borderSize = parseFloat(sizingStyle['border-bottom-width']) + parseFloat(sizingStyle['border-top-width']);\n  var nodeInfo = {\n    sizingStyle: sizingStyle,\n    paddingSize: paddingSize,\n    borderSize: borderSize,\n    boxSizing: boxSizing\n  };\n\n  if (useCache) {\n    computedStyleCache[uid] = nodeInfo;\n  }\n\n  return nodeInfo;\n}\n\nvar purgeCache = function purgeCache(uid) {\n  delete computedStyleCache[uid];\n};\n\nvar noop = function noop() {};\n\nvar uid = 0;\n\nvar TextareaAutosize =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TextareaAutosize, _React$Component);\n\n  function TextareaAutosize(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n\n    _this._onRef = function (node) {\n      _this._ref = node;\n      var inputRef = _this.props.inputRef;\n\n      if (typeof inputRef === 'function') {\n        inputRef(node);\n        return;\n      }\n\n      inputRef.current = node;\n    };\n\n    _this._onChange = function (event) {\n      if (!_this._controlled) {\n        _this._resizeComponent();\n      }\n\n      _this.props.onChange(event, _assertThisInitialized(_this));\n    };\n\n    _this._resizeComponent = function (callback) {\n      if (callback === void 0) {\n        callback = noop;\n      }\n\n      var nodeHeight = calculateNodeHeight(_this._ref, _this._uid, _this.props.useCacheForDOMMeasurements, _this.props.minRows, _this.props.maxRows);\n\n      if (nodeHeight === null) {\n        callback();\n        return;\n      }\n\n      var height = nodeHeight.height,\n          minHeight = nodeHeight.minHeight,\n          maxHeight = nodeHeight.maxHeight,\n          rowCount = nodeHeight.rowCount,\n          valueRowCount = nodeHeight.valueRowCount;\n      _this.rowCount = rowCount;\n      _this.valueRowCount = valueRowCount;\n\n      if (_this.state.height !== height || _this.state.minHeight !== minHeight || _this.state.maxHeight !== maxHeight) {\n        _this.setState({\n          height: height,\n          minHeight: minHeight,\n          maxHeight: maxHeight\n        }, callback);\n\n        return;\n      }\n\n      callback();\n    };\n\n    _this.state = {\n      height: props.style && props.style.height || 0,\n      minHeight: -Infinity,\n      maxHeight: Infinity\n    };\n    _this._uid = uid++;\n    _this._controlled = props.value !== undefined;\n    _this._resizeLock = false;\n    return _this;\n  }\n\n  var _proto = TextareaAutosize.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _inputRef = _this$props.inputRef,\n        _maxRows = _this$props.maxRows,\n        _minRows = _this$props.minRows,\n        _onHeightChange = _this$props.onHeightChange,\n        _useCacheForDOMMeasurements = _this$props.useCacheForDOMMeasurements,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"inputRef\", \"maxRows\", \"minRows\", \"onHeightChange\", \"useCacheForDOMMeasurements\"]);\n\n    props.style = _extends({}, props.style, {\n      height: this.state.height\n    });\n    var maxHeight = Math.max(props.style.maxHeight || Infinity, this.state.maxHeight);\n\n    if (maxHeight < this.state.height) {\n      props.style.overflow = 'hidden';\n    }\n\n    return createElement(\"textarea\", _extends({}, props, {\n      onChange: this._onChange,\n      ref: this._onRef\n    }));\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this._resizeComponent(); // Working around Firefox bug which runs resize listeners even when other JS is running at the same moment\n    // causing competing rerenders (due to setState in the listener) in React.\n    // More can be found here - facebook/react#6324\n\n\n    this._resizeListener = function () {\n      if (_this2._resizeLock) {\n        return;\n      }\n\n      _this2._resizeLock = true;\n\n      _this2._resizeComponent(function () {\n        _this2._resizeLock = false;\n      });\n    };\n\n    window.addEventListener('resize', this._resizeListener);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this._resizeComponent();\n    }\n\n    if (this.state.height !== prevState.height) {\n      this.props.onHeightChange(this.state.height, this);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener('resize', this._resizeListener);\n    purgeCache(this._uid);\n  };\n\n  return TextareaAutosize;\n}(Component);\n\nTextareaAutosize.defaultProps = {\n  inputRef: noop,\n  onChange: noop,\n  onHeightChange: noop,\n  useCacheForDOMMeasurements: false\n};\nprocess.env.NODE_ENV !== \"production\" ? TextareaAutosize.propTypes = {\n  inputRef: oneOfType([func, shape({\n    current: any\n  })]),\n  maxRows: number,\n  minRows: number,\n  onChange: func,\n  onHeightChange: func,\n  style: object,\n  useCacheForDOMMeasurements: bool,\n  value: string\n} : void 0;\n\nexport default TextareaAutosize;\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","var root = require('./_root');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite;\n\n/**\n * Checks if `value` is a finite primitive number.\n *\n * **Note:** This method is based on\n * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n * @example\n *\n * _.isFinite(3);\n * // => true\n *\n * _.isFinite(Number.MIN_VALUE);\n * // => true\n *\n * _.isFinite(Infinity);\n * // => false\n *\n * _.isFinite('3');\n * // => false\n */\nfunction isFinite(value) {\n  return typeof value == 'number' && nativeIsFinite(value);\n}\n\nmodule.exports = isFinite;\n","'use strict';\n\nfunction processString(options) {\n    var key = 0;\n\n    function processInputWithRegex(option, input) {\n        if (!option.fn || typeof option.fn !== 'function') return input;\n\n        if (!option.regex || !(option.regex instanceof RegExp)) return input;\n\n        if (typeof input === 'string') {\n            var regex = option.regex;\n            var result = null;\n            var output = [];\n\n            while ((result = regex.exec(input)) !== null) {\n                var index = result.index;\n                var match = result[0];\n\n                output.push(input.substring(0, index));\n                output.push(option.fn(++key, result));\n\n                input = input.substring(index + match.length, input.length + 1);\n                regex.lastIndex = 0;\n            }\n\n            output.push(input);\n            return output;\n        } else if (Array.isArray(input)) {\n            return input.map(function (chunk) {\n                return processInputWithRegex(option, chunk);\n            });\n        } else return input;\n    }\n\n    return function (input) {\n        if (!options || !Array.isArray(options) || !options.length) return input;\n\n        options.forEach(function (option) {\n            return input = processInputWithRegex(option, input);\n        });\n\n        return input;\n    };\n}\n\nmodule.exports = processString;\n\n","\"use strict\";\n\n/**\r\n * filesize\r\n *\r\n * @copyright 2019 Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @license BSD-3-Clause\r\n * @version 4.2.1\r\n */\n(function (global) {\n  var b = /^(b|B)$/,\n      symbol = {\n    iec: {\n      bits: [\"b\", \"Kib\", \"Mib\", \"Gib\", \"Tib\", \"Pib\", \"Eib\", \"Zib\", \"Yib\"],\n      bytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\n    },\n    jedec: {\n      bits: [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"],\n      bytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n    }\n  },\n      fullform = {\n    iec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\n    jedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\n  };\n  /**\r\n   * filesize\r\n   *\r\n   * @method filesize\r\n   * @param  {Mixed}   arg        String, Int or Float to transform\r\n   * @param  {Object}  descriptor [Optional] Flags\r\n   * @return {String}             Readable file size String\r\n   */\n\n  function filesize(arg) {\n    var descriptor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var result = [],\n        val = 0,\n        e = void 0,\n        base = void 0,\n        bits = void 0,\n        ceil = void 0,\n        full = void 0,\n        fullforms = void 0,\n        locale = void 0,\n        localeOptions = void 0,\n        neg = void 0,\n        num = void 0,\n        output = void 0,\n        round = void 0,\n        unix = void 0,\n        separator = void 0,\n        spacer = void 0,\n        standard = void 0,\n        symbols = void 0;\n\n    if (isNaN(arg)) {\n      throw new TypeError(\"Invalid number\");\n    }\n\n    bits = descriptor.bits === true;\n    unix = descriptor.unix === true;\n    base = descriptor.base || 2;\n    round = descriptor.round !== void 0 ? descriptor.round : unix ? 1 : 2;\n    locale = descriptor.locale !== void 0 ? descriptor.locale : \"\";\n    localeOptions = descriptor.localeOptions || {};\n    separator = descriptor.separator !== void 0 ? descriptor.separator : \"\";\n    spacer = descriptor.spacer !== void 0 ? descriptor.spacer : unix ? \"\" : \" \";\n    symbols = descriptor.symbols || {};\n    standard = base === 2 ? descriptor.standard || \"jedec\" : \"jedec\";\n    output = descriptor.output || \"string\";\n    full = descriptor.fullform === true;\n    fullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\n    e = descriptor.exponent !== void 0 ? descriptor.exponent : -1;\n    num = Number(arg);\n    neg = num < 0;\n    ceil = base > 2 ? 1000 : 1024; // Flipping a negative number to determine the size\n\n    if (neg) {\n      num = -num;\n    } // Determining the exponent\n\n\n    if (e === -1 || isNaN(e)) {\n      e = Math.floor(Math.log(num) / Math.log(ceil));\n\n      if (e < 0) {\n        e = 0;\n      }\n    } // Exceeding supported length, time to reduce & multiply\n\n\n    if (e > 8) {\n      e = 8;\n    }\n\n    if (output === \"exponent\") {\n      return e;\n    } // Zero is now a special case because bytes divide by 1\n\n\n    if (num === 0) {\n      result[0] = 0;\n      result[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n    } else {\n      val = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\n\n      if (bits) {\n        val = val * 8;\n\n        if (val >= ceil && e < 8) {\n          val = val / ceil;\n          e++;\n        }\n      }\n\n      result[0] = Number(val.toFixed(e > 0 ? round : 0));\n\n      if (result[0] === ceil && e < 8 && descriptor.exponent === void 0) {\n        result[0] = 1;\n        e++;\n      }\n\n      result[1] = base === 10 && e === 1 ? bits ? \"kb\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\n\n      if (unix) {\n        result[1] = standard === \"jedec\" ? result[1].charAt(0) : e > 0 ? result[1].replace(/B$/, \"\") : result[1];\n\n        if (b.test(result[1])) {\n          result[0] = Math.floor(result[0]);\n          result[1] = \"\";\n        }\n      }\n    } // Decorating a 'diff'\n\n\n    if (neg) {\n      result[0] = -result[0];\n    } // Applying custom symbol\n\n\n    result[1] = symbols[result[1]] || result[1];\n\n    if (locale === true) {\n      result[0] = result[0].toLocaleString();\n    } else if (locale.length > 0) {\n      result[0] = result[0].toLocaleString(locale, localeOptions);\n    } else if (separator.length > 0) {\n      result[0] = result[0].toString().replace(\".\", separator);\n    } // Returning Array, Object, or String (default)\n\n\n    if (output === \"array\") {\n      return result;\n    }\n\n    if (full) {\n      result[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\n    }\n\n    if (output === \"object\") {\n      return {\n        value: result[0],\n        symbol: result[1]\n      };\n    }\n\n    return result.join(spacer);\n  } // Partial application for functional programming\n\n\n  filesize.partial = function (opt) {\n    return function (arg) {\n      return filesize(arg, opt);\n    };\n  }; // CommonJS, AMD, script tag\n\n\n  if (typeof exports !== \"undefined\") {\n    module.exports = filesize;\n  } else if (typeof define === \"function\" && define.amd !== void 0) {\n    define(function () {\n      return filesize;\n    });\n  } else {\n    global.filesize = filesize;\n  }\n})(typeof window !== \"undefined\" ? window : global);\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconEye = ({ className = '', color = '#000000', height = 11, title, width = 15 }: Props) => (\n    <AccessibleSVG className={`icon-eye ${className}`} height={height} title={title} viewBox=\"0 0 15 11\" width={width}>\n        <path\n            className=\"fill-color\"\n            d=\"M.118 5.857C1.233 8.855 3.986 10.98 7.21 10.98c3.223 0 5.976-2.125 7.09-5.123C13.187 2.86 10.434.735 7.21.735 3.986.735 1.233 2.86.118 5.857zM7.21 9.27c-1.78 0-3.224-1.528-3.224-3.413 0-1.885 1.444-3.414 3.224-3.414 1.78 0 3.223 1.53 3.223 3.414 0 1.885-1.444 3.414-3.223 3.414zm0-5.462c-1.07 0-1.935.915-1.935 2.05 0 1.133.864 2.048 1.935 2.048 1.07 0 1.934-.915 1.934-2.05 0-1.133-.864-2.048-1.934-2.048z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconEye;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconComment = ({ className = '', color = '#000000', height = 11, title, width = 11 }: Props) => (\n    <AccessibleSVG\n        className={`icon-comment ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 11 11\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M9.556.932H1.492C.938.932.49 1.386.49 1.94l-.006 9.072L2.5 8.996h7.056c.554 0 1.008-.454 1.008-1.008V1.94c0-.554-.454-1.008-1.008-1.008zM2.5 4.46h6.048v1.008H2.5V4.46zm4.032 2.52H2.5V5.972h4.032V6.98zm2.016-3.024H2.5V2.948h6.048v1.008z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconComment;\n","// @flow\nimport * as React from 'react';\n\nimport AccessibleSVG from '../accessible-svg';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconPencilSolid = ({ className = '', color = '#000000', height = 10, title, width = 10 }: Props) => (\n    <AccessibleSVG\n        className={`icon-pencil-solid ${className}`}\n        height={height}\n        title={title}\n        viewBox=\"0 0 10 10\"\n        width={width}\n    >\n        <path\n            className=\"fill-color\"\n            d=\"M.5 7.625V9.5h1.875l5.53-5.53-1.876-1.874L.5 7.626zM9.354 2.52c.195-.194.195-.51 0-.704L8.184.646C7.99.45 7.674.45 7.48.646l-.916.915L8.44 3.437l.914-.915z\"\n            fill={color}\n        />\n    </AccessibleSVG>\n);\n\nexport default IconPencilSolid;\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    accessStatsViewDetails: {\n        defaultMessage: 'View Details',\n        description: 'The text in the link in the sidebar to open up the access stats popup',\n        id: 'boxui.accessStats.accessStatsViewDetails',\n    },\n    accessStatsViews: {\n        defaultMessage: 'Views',\n        description: 'The label for the view category of access stats for box notes',\n        id: 'boxui.accessStats.accessStatsViews',\n    },\n    accessStatsPreviews: {\n        defaultMessage: 'Previews',\n        description: 'The label for the preview category of access stats',\n        id: 'boxui.accessStats.accessStatsPreviews',\n    },\n    accessStatsEdits: {\n        defaultMessage: 'Edits',\n        description: 'The label for the edit category of access stats',\n        id: 'boxui.accessStats.accessStatsEdits',\n    },\n    accessStatsComments: {\n        defaultMessage: 'Comments',\n        description: 'The label for the comments category of access stats',\n        id: 'boxui.accessStats.accessStatsComments',\n    },\n    accessStatsDownloads: {\n        defaultMessage: 'Downloads',\n        description: 'The label for the downloads category of access stats',\n        id: 'boxui.accessStats.accessStatsDownloads',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage, FormattedNumber } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport IconEye from '../../icons/general/IconEye';\nimport IconComment from '../../icons/general/IconComment';\nimport IconDownloadSolid from '../../icons/general/IconDownloadSolid';\nimport IconPencilSolid from '../../icons/general/IconPencilSolid';\n\nimport messages from './messages';\n\nimport './AccessStatsItem.scss';\n\nconst statsAttributesTable = {\n    preview: {\n        icon: IconEye,\n        message: messages.accessStatsPreviews,\n    },\n    view: {\n        icon: IconEye,\n        message: messages.accessStatsViews,\n    },\n    download: {\n        icon: IconDownloadSolid,\n        message: messages.accessStatsDownloads,\n    },\n    comment: {\n        icon: IconComment,\n        message: messages.accessStatsComments,\n    },\n    edit: {\n        icon: IconPencilSolid,\n        message: messages.accessStatsEdits,\n    },\n};\nconst ICON_COLOR = '#2a62b9';\nconst ITEM_CONTENT_CLASS_NAME = 'access-stats-item-content';\n\ntype AccessStatsItemType = {\n    count: number,\n    hasCountOverflowed?: boolean,\n    openAccessStatsModal?: Function,\n    statButtonProps: Object,\n    type: $Keys<typeof statsAttributesTable>,\n};\n\nconst AccessStatsItem = ({\n    type,\n    count = 0,\n    hasCountOverflowed = false,\n    openAccessStatsModal,\n    statButtonProps,\n}: AccessStatsItemType) => {\n    const statAttributes = statsAttributesTable[type];\n    const IconComponent = statAttributes.icon;\n    const labelMessage = statAttributes.message;\n\n    const itemContent = (\n        <>\n            <IconComponent color={ICON_COLOR} height={10} width={14} />\n            <span className=\"access-stats-label\">\n                <FormattedMessage {...labelMessage} />\n            </span>\n            <FormattedNumber value={count} />\n            {hasCountOverflowed && '+'}\n        </>\n    );\n\n    return (\n        <li className=\"access-stats-item\">\n            {openAccessStatsModal ? (\n                <PlainButton className={ITEM_CONTENT_CLASS_NAME} onClick={openAccessStatsModal} {...statButtonProps}>\n                    {itemContent}\n                </PlainButton>\n            ) : (\n                <span className={ITEM_CONTENT_CLASS_NAME}>{itemContent}</span>\n            )}\n        </li>\n    );\n};\n\nexport default AccessStatsItem;\n","// @flow\nimport * as React from 'react';\n\nimport AccessStatsItem from './AccessStatsItem';\n\ntype AccessStatsItemsType = {\n    commentCount: number,\n    commentStatButtonProps: Object,\n    downloadCount: number,\n    downloadStatButtonProps: Object,\n    editCount: number,\n    editStatButtonProps: Object,\n    hasCountOverflowed: boolean,\n    isBoxNote: boolean,\n    openAccessStatsModal?: Function,\n    previewCount: number,\n    previewStatButtonProps: Object,\n    viewStatButtonProps: Object,\n};\n\nconst AccessStatsItemsList = ({\n    commentCount,\n    commentStatButtonProps,\n    downloadCount,\n    downloadStatButtonProps,\n    editCount,\n    editStatButtonProps,\n    hasCountOverflowed = false,\n    isBoxNote,\n    openAccessStatsModal,\n    previewCount,\n    previewStatButtonProps,\n    viewStatButtonProps,\n}: AccessStatsItemsType) => (\n    <ul className=\"access-stats-list\">\n        <AccessStatsItem\n            count={previewCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={isBoxNote ? viewStatButtonProps : previewStatButtonProps}\n            type={isBoxNote ? 'view' : 'preview'}\n        />\n        <AccessStatsItem\n            count={editCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={editStatButtonProps}\n            type=\"edit\"\n        />\n        <AccessStatsItem\n            count={commentCount}\n            hasCountOverflowed={hasCountOverflowed}\n            openAccessStatsModal={openAccessStatsModal}\n            statButtonProps={commentStatButtonProps}\n            type=\"comment\"\n        />\n        {!isBoxNote && (\n            <AccessStatsItem\n                count={downloadCount}\n                hasCountOverflowed={hasCountOverflowed}\n                openAccessStatsModal={openAccessStatsModal}\n                statButtonProps={downloadStatButtonProps}\n                type=\"download\"\n            />\n        )}\n    </ul>\n);\n\nexport default AccessStatsItemsList;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button/PlainButton';\nimport AccessStatsItemsList from './AccessStatsItemsList';\n\nimport messages from './messages';\n\nimport './AccessStats.scss';\n\ntype AccessStatsType = {\n    commentCount?: number,\n    /**\n     * Props for comment stat PlainButton\n     */\n    commentStatButtonProps?: Object,\n    downloadCount?: number,\n    /**\n     * Props for download stat PlainButton\n     */\n    downloadStatButtonProps?: Object,\n    editCount?: number,\n    /**\n     * Props for edit stat PlainButton\n     */\n    editStatButtonProps?: Object,\n    errorMessage?: string,\n    hasCountOverflowed?: boolean,\n    isBoxNote?: boolean,\n    /**\n     * A function that opens the access stats modal\n     */\n    openAccessStatsModal?: Function,\n    previewCount?: number,\n    /**\n     * Props for preview stat PlainButton\n     */\n    previewStatButtonProps?: Object,\n    /**\n     * Props for View More PlainButton\n     */\n    viewMoreButtonProps?: Object,\n    /**\n     * Props for view stat PlainButton\n     */\n    viewStatButtonProps?: Object,\n};\n\nconst AccessStats = ({\n    commentCount = 0,\n    commentStatButtonProps = {},\n    downloadCount = 0,\n    downloadStatButtonProps = {},\n    editCount = 0,\n    editStatButtonProps = {},\n    errorMessage,\n    hasCountOverflowed = false,\n    isBoxNote = false,\n    openAccessStatsModal,\n    previewCount = 0,\n    previewStatButtonProps = {},\n    viewMoreButtonProps = {},\n    viewStatButtonProps = {},\n}: AccessStatsType) => (\n    <div className=\"access-stats\">\n        {errorMessage ? (\n            <p>{errorMessage}</p>\n        ) : (\n            <>\n                <AccessStatsItemsList\n                    commentCount={commentCount}\n                    commentStatButtonProps={commentStatButtonProps}\n                    downloadCount={downloadCount}\n                    downloadStatButtonProps={downloadStatButtonProps}\n                    editCount={editCount}\n                    editStatButtonProps={editStatButtonProps}\n                    hasCountOverflowed={hasCountOverflowed}\n                    isBoxNote={isBoxNote}\n                    openAccessStatsModal={openAccessStatsModal}\n                    previewCount={previewCount}\n                    previewStatButtonProps={previewStatButtonProps}\n                    viewStatButtonProps={viewStatButtonProps}\n                />\n                {openAccessStatsModal && (\n                    <PlainButton\n                        className=\"lnk access-stats-view-details\"\n                        onClick={openAccessStatsModal}\n                        {...viewMoreButtonProps}\n                    >\n                        <FormattedMessage {...messages.accessStatsViewDetails} />\n                    </PlainButton>\n                )}\n            </>\n        )}\n    </div>\n);\n\nexport default AccessStats;\n","/**\n * @flow\n * @file Versions sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport isFinite from 'lodash/isFinite';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport AccessStats from '../../features/access-stats/AccessStats';\nimport messages from '../common/messages';\nimport { INTERACTION_TARGET, SECTION_TARGETS, DETAILS_TARGETS } from '../common/interactionTargets';\nimport { isBoxNote } from '../../utils/file';\nimport SidebarSection from './SidebarSection';\nimport withErrorHandling from './withErrorHandling';\n\ntype Props = {\n    accessStats?: FileAccessStats,\n    error?: MessageDescriptor,\n    file: BoxItem,\n    onAccessStatsClick?: Function,\n} & InjectIntlProvidedProps;\n\nconst SidebarAccessStats = ({\n    onAccessStatsClick,\n    accessStats = {\n        has_count_overflowed: false,\n    },\n    file,\n    error,\n    intl,\n}: Props) => {\n    const { preview_count, comment_count, download_count, edit_count } = accessStats;\n\n    if (\n        !isFinite(preview_count) &&\n        !isFinite(comment_count) &&\n        !isFinite(download_count) &&\n        !isFinite(edit_count) &&\n        !error\n    ) {\n        return null;\n    }\n\n    const errorMessage = error ? intl.formatMessage(error) : undefined;\n    return (\n        <SidebarSection\n            interactionTarget={SECTION_TARGETS.ACCESS_STATS}\n            title={<FormattedMessage {...messages.sidebarAccessStats} />}\n        >\n            <AccessStats\n                errorMessage={errorMessage}\n                commentCount={comment_count}\n                commentStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.COMMENTS,\n                }}\n                downloadCount={download_count}\n                downloadStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.DOWNLOADS,\n                }}\n                previewCount={preview_count}\n                previewStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.PREVIEWS,\n                }}\n                viewStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.VIEWS,\n                }}\n                editCount={edit_count}\n                editStatButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.EDITS,\n                }}\n                openAccessStatsModal={onAccessStatsClick}\n                isBoxNote={isBoxNote(file)}\n                viewMoreButtonProps={{\n                    [INTERACTION_TARGET]: DETAILS_TARGETS.ACCESS_STATS.VIEW_DETAILS,\n                }}\n            />\n        </SidebarSection>\n    );\n};\n\nexport { SidebarAccessStats as SidebarAccessStatsComponent };\nexport default withErrorHandling(injectIntl(SidebarAccessStats));\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport AccessibleSVG from '../accessible-svg';\nimport { bdlGray } from '../../styles/variables';\n\ntype Props = {\n    className?: string,\n    color?: string,\n    height?: number,\n    strokeWidth?: number,\n    /** A text-only string describing the icon if it's not purely decorative for accessibility */\n    title?: string | React.Element<any>,\n    width?: number,\n};\n\nconst IconSecurityClassification = ({\n    className = '',\n    height = 32,\n    color = bdlGray,\n    title,\n    strokeWidth = 2,\n    width = 32,\n}: Props) => {\n    const classes = classNames('bdl-IconSecurityClassification', className);\n\n    return (\n        <AccessibleSVG className={classes} height={height} title={title} viewBox=\"0 0 32 32\" width={width}>\n            <path\n                d=\"M17,2 L5,8 L5,15 C5,21.4214876 10.6933333,29.5421488 17,31 C23.3066667,29.5421488 29,21.4214876 29,15 L29,8 L17,2 Z\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                fill=\"none\"\n            />\n            <path\n                d=\"M23,11 L23,19\"\n                stroke={color}\n                strokeWidth={strokeWidth}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                fill=\"none\"\n            />\n        </AccessibleSVG>\n    );\n};\n\nexport default IconSecurityClassification;\n","// @flow\nimport * as React from 'react';\nimport classNames from 'classnames';\n\nimport IconAlertDefault from '../../icons/general/IconAlertDefault';\nimport { bdlYellorange } from '../../styles/variables';\nimport './SecurityBadge.scss';\n\ntype Props = {\n    className?: string,\n    icon?: React.Node,\n    message: React.Node,\n};\n\nconst SecurityBadge = ({ className, icon, message, ...rest }: Props) => (\n    <h1 className={classNames('bdl-SecurityBadge', className)} {...rest}>\n        {icon}\n        <span className=\"bdl-SecurityBadge-name\">{message}</span>\n    </h1>\n);\n\nSecurityBadge.defaultProps = {\n    icon: <IconAlertDefault color={bdlYellorange} height={22} width={22} strokeWidth={3} />,\n};\n\nexport default SecurityBadge;\n","// @flow\nimport * as React from 'react';\n\nimport PlainButton from '../../components/plain-button';\nimport Tooltip from '../../components/tooltip';\nimport IconSecurityClassification from '../../icons/general/IconSecurityClassification';\nimport SecurityBadge from '../security';\nimport { bdlYellorange } from '../../styles/variables';\nimport type { Position } from '../../components/tooltip';\nimport './ClassifiedBadge.scss';\n\ntype Props = {\n    name: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n    tooltipPosition?: Position,\n    tooltipText?: string,\n};\n\nconst ClassifiedBadge = ({ name, onClick, tooltipPosition = 'bottom-center', tooltipText }: Props) => {\n    const isClickable = typeof onClick === 'function';\n    const isTooltipDisabled = !tooltipText;\n    const badge = (\n        <SecurityBadge\n            className=\"bdl-ClassifiedBadge\"\n            icon={<IconSecurityClassification color={bdlYellorange} height={10} width={10} strokeWidth={3} />}\n            message={name}\n        />\n    );\n    return (\n        <Tooltip isDisabled={isTooltipDisabled} isTabbable={false} position={tooltipPosition} text={tooltipText}>\n            {isClickable ? (\n                <PlainButton\n                    className=\"bdl-ClassifiedBadge-editButton\"\n                    data-resin-target=\"editclassification\"\n                    onClick={onClick}\n                    type=\"button\"\n                >\n                    {badge}\n                </PlainButton>\n            ) : (\n                badge\n            )}\n        </Tooltip>\n    );\n};\n\nexport default ClassifiedBadge;\n","import { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    add: {\n        defaultMessage: 'Add',\n        description: 'Button to add classification on an item',\n        id: 'boxui.classification.add',\n    },\n    classification: {\n        defaultMessage: 'Classification',\n        description: 'Header for classification section in sidebar',\n        id: 'boxui.classification.classification',\n    },\n    definition: {\n        defaultMessage: 'Definition',\n        description: 'Header displayed above the classification definition',\n        id: 'boxui.classification.definition',\n    },\n    edit: {\n        defaultMessage: 'Edit',\n        description: 'Button to edit classification on an item',\n        id: 'boxui.classification.edit',\n    },\n    missing: {\n        defaultMessage: 'Not classified',\n        description: 'Default message for classification in the sidebar when there is none',\n        id: 'boxui.classification.missing',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport Label from '../../components/label/Label';\nimport ClassifiedBadge from './ClassifiedBadge';\nimport messages from './messages';\nimport './Classification.scss';\n\nconst STYLE_INLINE: 'inline' = 'inline';\nconst STYLE_TOOLTIP: 'tooltip' = 'tooltip';\n\ntype Props = {\n    className?: string,\n    definition?: string,\n    messageStyle?: typeof STYLE_INLINE | typeof STYLE_TOOLTIP,\n    name?: string,\n    onClick?: (event: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst Classification = ({ definition, className = '', messageStyle, name, onClick }: Props) => {\n    const isClassified = !!name;\n    const hasDefinition = !!definition;\n    const isTooltipMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_TOOLTIP;\n    const isInlineMessageEnabled = isClassified && hasDefinition && messageStyle === STYLE_INLINE;\n    const isNotClassifiedMessageVisible = !isClassified && messageStyle === STYLE_INLINE;\n\n    return (\n        <article className={`bdl-Classification ${className}`}>\n            {isClassified && (\n                <ClassifiedBadge\n                    name={((name: any): string)}\n                    onClick={onClick}\n                    tooltipText={isTooltipMessageEnabled ? definition : undefined}\n                />\n            )}\n            {isInlineMessageEnabled && (\n                <Label text={<FormattedMessage {...messages.definition} />}>\n                    <p className=\"bdl-Classification-definition\">{definition}</p>\n                </Label>\n            )}\n            {isNotClassifiedMessageVisible && (\n                <span className=\"bdl-Classification-missingMessage\">\n                    <FormattedMessage {...messages.missing} />\n                </span>\n            )}\n        </article>\n    );\n};\n\nexport { STYLE_INLINE, STYLE_TOOLTIP };\nexport default Classification;\n","/**\n * @flow\n * @file Classification add/edit button\n * @author Box\n */\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\nimport messages from './messages';\nimport PlainButton from '../../components/plain-button/PlainButton';\n\ntype Props = {\n    className?: string,\n    isEditing: boolean,\n    onEdit: (e: SyntheticEvent<HTMLButtonElement>) => void,\n};\n\nconst EditClassificationButton = ({ className = '', isEditing, onEdit, ...rest }: Props) => {\n    const message = isEditing ? messages.edit : messages.add;\n    const interaction = isEditing ? 'editclassification' : 'addclassification';\n    return (\n        <PlainButton\n            className={`bdl-EditClassificationButton ${className}`}\n            data-resin-target={interaction}\n            onClick={onEdit}\n            type=\"button\"\n            {...rest}\n        >\n            <FormattedMessage {...message} />\n        </PlainButton>\n    );\n};\n\nexport default EditClassificationButton;\n","/**\n * @flow\n * @file Classification sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport getProp from 'lodash/get';\nimport { FormattedMessage } from 'react-intl';\n\nimport Classification, { classificationMessages, EditClassificationButton } from '../../features/classification';\nimport { INTERACTION_TARGET, SECTION_TARGETS } from '../common/interactionTargets';\nimport Collapsible from '../../components/collapsible';\nimport { FIELD_PERMISSIONS_CAN_UPLOAD } from '../../constants';\nimport './SidebarClassification.scss';\n\ntype OnEdit = (e: SyntheticEvent<HTMLButtonElement>) => void;\ntype Props = {\n    classification?: ClassificationInfo,\n    file: BoxItem,\n    onEdit?: OnEdit,\n};\n\nconst SidebarClassification = ({ classification, file, onEdit }: Props) => {\n    const isEditable = !!onEdit && getProp(file, FIELD_PERMISSIONS_CAN_UPLOAD, false);\n    const hasClassification = !!getProp(classification, 'name');\n    if (!hasClassification && !isEditable) {\n        return null;\n    }\n    return (\n        <Collapsible\n            buttonProps={{\n                [INTERACTION_TARGET]: SECTION_TARGETS.CLASSIFICATION,\n            }}\n            className=\"bcs-SidebarClassification\"\n            headerActionItems={\n                isEditable ? (\n                    <EditClassificationButton\n                        className=\"bcs-SidebarClassification-edit\"\n                        isEditing={hasClassification}\n                        onEdit={((onEdit: any): OnEdit)}\n                    />\n                ) : null\n            }\n            title={<FormattedMessage {...classificationMessages.classification} />}\n        >\n            <Classification {...classification} messageStyle=\"inline\" />\n        </Collapsible>\n    );\n};\n\nexport default SidebarClassification;\n","// @flow\nimport { defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n    bookmarkExpiration: {\n        defaultMessage: 'This bookmark will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this bookmark will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.bookmarkExpiration',\n    },\n    created: {\n        defaultMessage: 'Created',\n        description: 'Label for created date under item properties in the sidebar',\n        id: 'boxui.itemDetails.created',\n    },\n    deleted: {\n        defaultMessage: 'Deleted',\n        description: 'Label for deletion date under item properties in the sidebar',\n        id: 'boxui.itemDetails.deleted',\n    },\n    description: {\n        defaultMessage: 'Description',\n        description: 'Label for description under item properties in the sidebar',\n        id: 'boxui.itemDetails.description',\n    },\n    descriptionPlaceholder: {\n        defaultMessage: 'Enter a description',\n        description: 'Placeholder for textarea to enter a description under item properties in the sidebar',\n        id: 'boxui.itemDetails.descriptionPlaceholder',\n    },\n    enterpriseOwner: {\n        defaultMessage: 'Enterprise Owner',\n        description: 'Label for name of enterprise owner under item properties in the sidebar',\n        id: 'boxui.itemDetails.enterpriseOwner',\n    },\n    fileExpiration: {\n        defaultMessage: 'This file will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this file will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.fileExpiration',\n    },\n    folderExpiration: {\n        defaultMessage: 'This folder will be deleted on {expiration}.',\n        description:\n            'Warning message in the sidebar that this folder will be automatically deleted on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.folderExpiration',\n    },\n    modified: {\n        defaultMessage: 'Modified',\n        description: 'Label for modified date under item properties in the sidebar',\n        id: 'boxui.itemDetails.modified',\n    },\n    owner: {\n        defaultMessage: 'Owner',\n        description: 'Label for name of owner under item properties in the sidebar',\n        id: 'boxui.itemDetails.owner',\n    },\n    retentionPolicyDescription: {\n        defaultMessage: 'Policy',\n        description: 'Label for description of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyDescription',\n    },\n    retentionPolicyExpiration: {\n        defaultMessage: 'Policy Expiration',\n        description: 'Label for the expiration date of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyExpiration',\n    },\n    retentionPolicyExtend: {\n        defaultMessage: 'Extend',\n        description:\n            'Button to extend the expiration date of the retention policy under item properties in the sidebar',\n        id: 'boxui.itemDetails.retentionPolicyExtend',\n    },\n    savedVersions: {\n        defaultMessage: '{versionCount, number} Saved Versions',\n        description:\n            'Text for button in the sidebar to open the version history popup, {versionCount} is the number of saved file versions',\n        id: 'boxui.itemDetails.savedVersions',\n    },\n    sharedLinkExpiration: {\n        defaultMessage: 'This shared link will be disabled on {expiration}.',\n        description:\n            'Warning message in the sidebar that this shared link will expire on a certain date, {expiration} is the date',\n        id: 'boxui.itemDetails.sharedLinkExpiration',\n    },\n    size: {\n        defaultMessage: 'Size',\n        description: 'Label for human-readable filesize under item properties in the sidebar',\n        id: 'boxui.itemDetails.size',\n    },\n    uploader: {\n        defaultMessage: 'Uploader',\n        description: 'Label for name of uploader under item properties in the sidebar',\n        id: 'boxui.itemDetails.uploader',\n    },\n    url: {\n        defaultMessage: 'URL',\n        description: 'Label for a weblink url under item properties in the sidebar',\n        id: 'boxui.itemDetails.url',\n    },\n    urlPlaceholder: {\n        defaultMessage: 'Enter a valid url',\n        description: 'Placeholder for a weblink url text area in the right sidebar',\n        id: 'boxui.itemDetails.urlPlaceholder',\n    },\n});\n\nexport default messages;\n","// @flow\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nimport messages from './messages';\n\ntype Props = {\n    intl: Object,\n    onDescriptionChange: Function,\n    textAreaProps?: Object,\n    value?: string,\n};\n\ntype State = {\n    value: string,\n};\n\nclass EditableDescription extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        textAreaProps: {},\n        value: '',\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            value: props.value || '',\n        };\n    }\n\n    componentDidUpdate({ value: prevValue }: Props): void {\n        const { value } = this.props;\n        if (prevValue !== value) {\n            this.setState({ value });\n        }\n    }\n\n    handleBlur = (): void => {\n        const { value } = this.state;\n        this.props.onDescriptionChange(value);\n    };\n\n    handleChange = (event: SyntheticEvent<HTMLTextAreaElement>): void => {\n        const { value } = event.currentTarget;\n        this.setState({ value });\n    };\n\n    render() {\n        const { intl, textAreaProps } = this.props;\n        const { value } = this.state;\n\n        return (\n            <TextareaAutosize\n                {...textAreaProps}\n                className=\"description-textarea\"\n                maxLength=\"255\"\n                maxRows={6}\n                onBlur={this.handleBlur}\n                onChange={this.handleChange}\n                placeholder={intl.formatMessage(messages.descriptionPlaceholder)}\n                value={value}\n            />\n        );\n    }\n}\n\nexport { EditableDescription as EditableDescriptionBase };\nexport default injectIntl(EditableDescription);\n","// @flow\nimport * as React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nimport TextInput from '../../components/text-input/TextInput';\nimport commonMessages from '../../common/messages';\n\nimport messages from './messages';\n\nconst VALUE_MISSING = 'valueMissing';\nconst TYPE_MISMATCH = 'typeMismatch';\n\nconst errorMap = {\n    [VALUE_MISSING]: <FormattedMessage {...commonMessages.requiredFieldError} />,\n    [TYPE_MISMATCH]: <FormattedMessage {...commonMessages.invalidURLError} />,\n};\n\ntype Props = {\n    intl: Object,\n    onValidURLChange: Function,\n    value: string,\n};\n\ntype State = {\n    error: '' | $Keys<typeof errorMap>,\n    value: string,\n};\n\nclass EditableURL extends React.Component<Props, State> {\n    state = {\n        error: '',\n        value: this.props.value,\n    };\n\n    componentDidUpdate({ value: prevValue }: Props) {\n        const { value } = this.props;\n        if (prevValue !== value) {\n            this.setState({ value });\n        }\n    }\n\n    inputEl: ?HTMLInputElement;\n\n    handleBlur = (): void => {\n        if (!this.inputEl) {\n            return;\n        }\n\n        const { valid, valueMissing } = this.inputEl.validity;\n        if (!valid) {\n            this.setState({\n                error: valueMissing ? VALUE_MISSING : TYPE_MISMATCH,\n            });\n            return;\n        }\n\n        this.props.onValidURLChange(this.state.value);\n    };\n\n    handleChange = (event: SyntheticEvent<HTMLInputElement>): void => {\n        this.setState({ value: event.currentTarget.value });\n    };\n\n    handleFocus = (): void => {\n        this.setState({ error: '' });\n    };\n\n    render() {\n        const {\n            intl: { formatMessage },\n        } = this.props;\n        const { error, value } = this.state;\n\n        return (\n            <TextInput\n                className=\"url-input\"\n                error={error ? errorMap[error] : undefined}\n                hideLabel\n                inputRef={ref => {\n                    this.inputEl = ref;\n                }}\n                isRequired\n                label={formatMessage(messages.url)}\n                onBlur={this.handleBlur}\n                onChange={this.handleChange}\n                onFocus={this.handleFocus}\n                placeholder={formatMessage(messages.urlPlaceholder)}\n                type=\"url\"\n                value={value}\n            />\n        );\n    }\n}\n\nexport { EditableURL as EditableURLBase, VALUE_MISSING, TYPE_MISMATCH };\nexport default injectIntl(EditableURL);\n","/* @flow */\nimport * as React from 'react';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\n\nimport messages from './messages';\n\nconst datetimeOptions = {\n    day: 'numeric',\n    month: 'short',\n    year: 'numeric',\n};\n\ntype Props = {\n    dispositionTime?: number,\n    openModal?: Function,\n    policyType?: string,\n    retentionPolicyDescription?: string,\n};\n\nconst RetentionPolicy = ({ dispositionTime, openModal, policyType, retentionPolicyDescription }: Props) => {\n    if (!retentionPolicyDescription) {\n        return null;\n    }\n\n    return (\n        <>\n            <FormattedMessage tagName=\"dt\" {...messages.retentionPolicyDescription} />\n            <dd>{retentionPolicyDescription}</dd>\n            {policyType !== 'indefinite' ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.retentionPolicyExpiration} />\n                    {dispositionTime ? (\n                        <dd>\n                            <FormattedDate value={new Date(dispositionTime)} {...datetimeOptions} />\n                            {openModal ? (\n                                <PlainButton className=\"lnk\" onClick={openModal}>\n                                    <FormattedMessage {...messages.retentionPolicyExtend} />\n                                </PlainButton>\n                            ) : null}\n                        </dd>\n                    ) : null}\n                </>\n            ) : null}\n        </>\n    );\n};\n\nexport default RetentionPolicy;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport processString from 'react-process-string';\n\nconst NEWLINE_REGEX = /(\\r\\n|\\n\\r|\\n|\\r)/g;\n// eslint-disable-next-line no-useless-escape\nconst URL_REGEX = /\\b(ht|f)tps?:\\/\\/[\\w\\._\\-]+(:\\d+)?(\\/[\\w\\-_\\.~\\+\\/#\\?&%=:\\[\\]@!\\$'\\(\\)\\*;,]*)?/gim;\n\nconst ReadonlyDescription = ({ value }) =>\n    processString([\n        {\n            regex: NEWLINE_REGEX,\n            // eslint-disable-next-line react/display-name\n            fn: key => <br key={key} />,\n        },\n        {\n            regex: URL_REGEX,\n            // eslint-disable-next-line react/display-name\n            fn: (key, result) => (\n                <a key={key} href={result[0]} rel=\"noopener noreferrer\" target=\"_blank\">\n                    {result[0]}\n                </a>\n            ),\n        },\n    ])(value);\n\nReadonlyDescription.propTypes = {\n    value: PropTypes.string,\n};\n\nexport default ReadonlyDescription;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport uniqueid from 'lodash/uniqueId';\nimport { FormattedDate, FormattedMessage } from 'react-intl';\n\nimport EditableDescription from './EditableDescription';\nimport EditableURL from './EditableURL';\nimport RetentionPolicy from './RetentionPolicy';\nimport ReadonlyDescription from './ReadonlyDescription';\nimport messages from './messages';\n\nimport './ItemProperties.scss';\n\nconst datetimeOptions = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n};\n\nconst ItemProperties = ({\n    createdAt,\n    description,\n    descriptionTextareaProps = {},\n    enterpriseOwner,\n    modifiedAt,\n    onDescriptionChange,\n    onValidURLChange,\n    owner,\n    retentionPolicyProps = {},\n    size,\n    trashedAt,\n    uploader,\n    url,\n}) => {\n    const descriptionId = uniqueid('description_');\n\n    return (\n        <dl className=\"item-properties\">\n            {description || onDescriptionChange ? (\n                <>\n                    <FormattedMessage {...messages.description}>\n                        {text => <dt id={descriptionId}>{text}</dt>}\n                    </FormattedMessage>\n                    <dd>\n                        {onDescriptionChange ? (\n                            <EditableDescription\n                                onDescriptionChange={onDescriptionChange}\n                                textAreaProps={{ ...descriptionTextareaProps, 'aria-labelledby': descriptionId }}\n                                value={description}\n                            />\n                        ) : (\n                            <ReadonlyDescription value={description} />\n                        )}\n                    </dd>\n                </>\n            ) : null}\n            {!!url && (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.url} />\n                    <dd>{onValidURLChange ? <EditableURL onValidURLChange={onValidURLChange} value={url} /> : url}</dd>\n                </>\n            )}\n            {owner ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.owner} />\n                    <dd>{owner}</dd>\n                </>\n            ) : null}\n            {enterpriseOwner ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.enterpriseOwner} />\n                    <dd>{enterpriseOwner}</dd>\n                </>\n            ) : null}\n            {uploader ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.uploader} />\n                    <dd>{uploader}</dd>\n                </>\n            ) : null}\n            {createdAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.created} />\n                    <dd>\n                        <FormattedDate value={new Date(createdAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            {modifiedAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.modified} />\n                    <dd>\n                        <FormattedDate value={new Date(modifiedAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            {size ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.size} />\n                    <dd>{size}</dd>\n                </>\n            ) : null}\n            {trashedAt ? (\n                <>\n                    <FormattedMessage tagName=\"dt\" {...messages.deleted} />\n                    <dd>\n                        <FormattedDate value={new Date(trashedAt)} {...datetimeOptions} />\n                    </dd>\n                </>\n            ) : null}\n            <RetentionPolicy {...retentionPolicyProps} />\n        </dl>\n    );\n};\n\nItemProperties.propTypes = {\n    /** the datetime this item was created, accepts any value that can be passed to the Date() constructor */\n    createdAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** a description for the item */\n    description: PropTypes.string,\n    /** props for the editable description textarea */\n    descriptionTextareaProps: PropTypes.object,\n    /** the name of the item's enterprise owner if the item is owned by a different enterprise */\n    enterpriseOwner: PropTypes.string,\n    /** the datetime this item was last modified, accepts any value that can be passed to the Date() constructor */\n    modifiedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** function called on description textarea blur with the new value to save */\n    onDescriptionChange: PropTypes.func,\n    /** function called on url input blur with the new value to save */\n    onValidURLChange: PropTypes.func,\n    /** the name of the item's owner */\n    owner: PropTypes.string,\n    /** props for the retention policy of this item */\n    retentionPolicyProps: PropTypes.object,\n    /** use the getFileSize util to get a localized human-readable string from the number of bytes */\n    size: PropTypes.string,\n    /** the datetime this item was deleted or moved to trash, accepts any value that can be passed to the Date() constructor */\n    trashedAt: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    /** the name of the user who uploaded this item */\n    uploader: PropTypes.string,\n    /** the URL for the item when the item is a weblink */\n    url: PropTypes.string,\n};\n\nexport default ItemProperties;\n","import filesize from 'filesize';\n\nconst defaultDigitalUnits = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nconst bcp47TagToDigitalUnits = {\n    fi: ['t', 'kt', 'Mt', 'Gt', 'Tt', 'Pt', 'Et', 'Zt', 'Yt'],\n    fr: ['o', 'Ko', 'Mo', 'Go', 'To', 'Po', 'Eo', 'Zo', 'Yo'],\n    ru: ['Б', 'КБ', 'МБ', 'ГБ', 'ТБ', 'ПБ', 'ЭБ', 'ЗБ', 'ЙБ'],\n};\n\n/**\n * Formats a file size from number of bytes to a human-readable, localized string.\n * @param {number} size Number of bytes\n * @param {string} [locale] Optional locale, defaults to 'en'\n * @returns {string} The size as a localized string\n */\nconst getFileSize = (size, locale = 'en') => {\n    const settings = { round: 1 };\n\n    const localizedUnits = bcp47TagToDigitalUnits[locale];\n    if (localizedUnits) {\n        // map default units to localized units, ex. { B: Б, KB: КБ, ... }\n        settings.symbols = defaultDigitalUnits.reduce((symbols, unit, index) => {\n            symbols[unit] = localizedUnits[index];\n            return symbols;\n        }, {});\n    }\n\n    return filesize(size, settings);\n};\n\nexport default getFileSize;\n","/**\n * @flow\n * @file Sidebar file properties component\n * @author Box\n */\n\nimport React from 'react';\nimport getProp from 'lodash/get';\nimport { injectIntl } from 'react-intl';\nimport ItemProperties from '../../features/item-details/ItemProperties';\nimport LoadingIndicatorWrapper from '../../components/loading-indicator/LoadingIndicatorWrapper';\nimport getFileSize from '../../utils/getFileSize';\nimport { INTERACTION_TARGET, DETAILS_TARGETS } from '../common/interactionTargets';\nimport withErrorHandling from './withErrorHandling';\n\ntype Props = {\n    classification?: ClassificationInfo,\n    file: BoxItem,\n    hasClassification: boolean,\n    hasRetentionPolicy: boolean,\n    isLoading: boolean,\n    onDescriptionChange: Function,\n    onRetentionPolicyExtendClick?: Function,\n    retentionPolicy?: Object,\n} & InjectIntlProvidedProps;\n\nconst SidebarFileProperties = ({\n    file,\n    onDescriptionChange,\n    hasRetentionPolicy,\n    retentionPolicy,\n    onRetentionPolicyExtendClick,\n    isLoading,\n    intl,\n}: Props) => (\n    <LoadingIndicatorWrapper isLoading={isLoading}>\n        <ItemProperties\n            createdAt={file.content_created_at}\n            description={file.description}\n            descriptionTextareaProps={{\n                [INTERACTION_TARGET]: DETAILS_TARGETS.DESCRIPTION,\n            }}\n            modifiedAt={file.content_modified_at}\n            onDescriptionChange={getProp(file, 'permissions.can_rename') ? onDescriptionChange : undefined}\n            owner={getProp(file, 'owned_by.name')}\n            retentionPolicyProps={\n                hasRetentionPolicy\n                    ? {\n                          ...retentionPolicy,\n                          openModal: onRetentionPolicyExtendClick,\n                      }\n                    : {}\n            }\n            size={getFileSize(file.size, intl.locale)}\n            uploader={getProp(file, 'created_by.name')}\n        />\n    </LoadingIndicatorWrapper>\n);\n\nexport { SidebarFileProperties as SidebarFilePropertiesComponent };\nexport default injectIntl(withErrorHandling(SidebarFileProperties));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport InlineNotice from '../../components/inline-notice';\n\nimport messages from './messages';\n\nconst SharedLinkExpirationNotice = ({ expiration }) => (\n    <InlineNotice>\n        <FormattedMessage {...messages.sharedLinkExpiration} values={{ expiration }} />\n    </InlineNotice>\n);\n\nSharedLinkExpirationNotice.propTypes = {\n    /** a localized, human-readable string/node representing the expiration date */\n    expiration: PropTypes.node.isRequired,\n};\n\nexport default SharedLinkExpirationNotice;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\n\nimport InlineNotice from '../../components/inline-notice';\n\nimport messages from './messages';\n\nconst FILE = 'file';\nconst FOLDER = 'folder';\nconst WEBLINK = 'web_link';\n\nconst ItemExpirationNotice = ({ expiration, itemType }) => {\n    let messageID = '';\n    switch (itemType) {\n        case FILE:\n            messageID = 'fileExpiration';\n            break;\n        case FOLDER:\n            messageID = 'folderExpiration';\n            break;\n        case WEBLINK:\n            messageID = 'bookmarkExpiration';\n            break;\n        // no default\n    }\n\n    return (\n        <InlineNotice>\n            <FormattedMessage {...messages[messageID]} values={{ expiration }} />\n        </InlineNotice>\n    );\n};\n\nItemExpirationNotice.propTypes = {\n    /** a localized, human-readable string/node representing the expiration date */\n    expiration: PropTypes.node.isRequired,\n    /** the type of the item */\n    itemType: PropTypes.oneOf([FILE, FOLDER, WEBLINK]).isRequired,\n};\n\nexport default ItemExpirationNotice;\n","/**\n * @flow\n * @file Preview details sidebar notices component\n * @author Box\n */\n\nimport * as React from 'react';\nimport getProp from 'lodash/get';\nimport SharedLinkExpirationNotice from '../../features/item-details/SharedLinkExpirationNotice';\nimport ItemExpirationNotice from '../../features/item-details/ItemExpirationNotice';\nimport { addTime } from '../../utils/datetime';\n\nimport DateField from '../common/date';\n\nconst ONE_MINUTE_IN_MS = 60000;\n\nconst NOTICE_DATE_FORMAT = {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n};\n\ntype Props = {\n    file: BoxItem,\n};\n\nconst SidebarNotices = ({ file }: Props) => {\n    const itemExpiration = getProp(file, 'expires_at');\n    const sharedLinkExpiration = getProp(file, 'shared_link.unshared_at');\n\n    if (!itemExpiration && !sharedLinkExpiration) {\n        return null;\n    }\n\n    return (\n        <>\n            {!!itemExpiration && (\n                <ItemExpirationNotice\n                    expiration={\n                        <DateField\n                            date={addTime(new Date(itemExpiration), ONE_MINUTE_IN_MS)}\n                            dateFormat={NOTICE_DATE_FORMAT}\n                            relative={false}\n                        />\n                    }\n                    itemType=\"file\"\n                />\n            )}\n            {!!sharedLinkExpiration && (\n                <SharedLinkExpirationNotice\n                    expiration={\n                        <DateField\n                            date={addTime(new Date(sharedLinkExpiration), ONE_MINUTE_IN_MS)}\n                            dateFormat={NOTICE_DATE_FORMAT}\n                            relative={false}\n                        />\n                    }\n                />\n            )}\n        </>\n    );\n};\n\nexport default SidebarNotices;\n","// @flow\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { FormattedMessage } from 'react-intl';\n\nimport PlainButton from '../../components/plain-button';\n\nimport messages from './messages';\n\ntype Props = {\n    className: string,\n    /** the number of saved versions that exist for this item, should be 2 or more */\n    onClick?: Function,\n    versionCount: number,\n};\n\nconst VersionHistoryLink = ({ className, versionCount, onClick, ...rest }: Props) => {\n    const formattedMessageComponent = <FormattedMessage {...messages.savedVersions} values={{ versionCount }} />;\n\n    // Only render it as a link if there is an onClick\n    if (onClick) {\n        return (\n            <PlainButton className={classNames('lnk', className)} onClick={onClick} {...rest}>\n                {formattedMessageComponent}\n            </PlainButton>\n        );\n    }\n\n    return <div className={className}>{formattedMessageComponent}</div>;\n};\n\nVersionHistoryLink.defaultProps = {\n    className: '',\n};\n\nexport default VersionHistoryLink;\n","/**\n * @flow\n * @file Versions sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport VersionHistoryLink from '../../features/item-details/VersionHistoryLink';\n\nimport { DETAILS_TARGETS } from '../common/interactionTargets';\nimport { isBoxNote } from '../../utils/file';\nimport './SidebarVersions.scss';\n\ntype Props = {\n    file: BoxItem,\n    onVersionHistoryClick?: Function,\n};\n\nconst SidebarVersions = ({ onVersionHistoryClick, file }: Props) => {\n    const { version_number } = file;\n\n    const versionNumber = parseInt(version_number, 10);\n\n    if (isBoxNote(file) || !versionNumber || versionNumber <= 1) {\n        return null;\n    }\n\n    return (\n        <VersionHistoryLink\n            className=\"bcs-SidebarVersions\"\n            data-resin-target={DETAILS_TARGETS.VERSION_HISTORY}\n            data-testid={DETAILS_TARGETS.VERSION_HISTORY}\n            onClick={onVersionHistoryClick}\n            versionCount={versionNumber}\n        />\n    );\n};\n\nexport default SidebarVersions;\n","/**\n * @flow\n * @file Details sidebar component\n * @author Box\n */\n\nimport React from 'react';\nimport flow from 'lodash/flow';\nimport getProp from 'lodash/get';\nimport noop from 'lodash/noop';\nimport { FormattedMessage } from 'react-intl';\nimport API from '../../api';\nimport messages from '../common/messages';\nimport SidebarAccessStats from './SidebarAccessStats';\nimport SidebarClassification from './SidebarClassification';\nimport SidebarContent from './SidebarContent';\nimport SidebarFileProperties from './SidebarFileProperties';\nimport SidebarNotices from './SidebarNotices';\nimport SidebarSection from './SidebarSection';\nimport SidebarVersions from './SidebarVersions';\nimport { EVENT_JS_READY } from '../common/logger/constants';\nimport { getBadItemError } from '../../utils/error';\nimport { mark } from '../../utils/performance';\nimport { SECTION_TARGETS } from '../common/interactionTargets';\nimport { SIDEBAR_FIELDS_TO_FETCH } from '../../utils/fields';\nimport { withAPIContext } from '../common/api-context';\nimport { withErrorBoundary } from '../common/error-boundary';\nimport { withLogger } from '../common/logger';\nimport {\n    HTTP_STATUS_CODE_FORBIDDEN,\n    ORIGIN_DETAILS_SIDEBAR,\n    IS_ERROR_DISPLAYED,\n    SIDEBAR_VIEW_DETAILS,\n} from '../../constants';\nimport './DetailsSidebar.scss';\n\ntype ExternalProps = {\n    classification?: ClassificationInfo,\n    elementId: string,\n    fileId: string,\n    hasAccessStats?: boolean,\n    hasClassification?: boolean,\n    hasNotices?: boolean,\n    hasProperties?: boolean,\n    hasRetentionPolicy?: boolean,\n    hasVersions?: boolean,\n    onAccessStatsClick?: Function,\n    onClassificationClick?: (e: SyntheticEvent<HTMLButtonElement>) => void,\n    onRetentionPolicyExtendClick?: Function,\n    onVersionHistoryClick?: Function,\n    retentionPolicy?: Object,\n} & ErrorContextProps &\n    WithLoggerProps;\ntype Props = {\n    api: API,\n} & ExternalProps &\n    ErrorContextProps &\n    WithLoggerProps;\n\ntype State = {\n    accessStats?: FileAccessStats,\n    accessStatsError?: Errors,\n    file?: BoxItem,\n    fileError?: Errors,\n    isLoadingAccessStats: boolean,\n};\n\nconst MARK_NAME_JS_READY = `${ORIGIN_DETAILS_SIDEBAR}_${EVENT_JS_READY}`;\n\nmark(MARK_NAME_JS_READY);\n\nclass DetailsSidebar extends React.PureComponent<Props, State> {\n    static defaultProps = {\n        hasNotices: false,\n        hasProperties: false,\n        hasAccessStats: false,\n        hasClassification: false,\n        hasRetentionPolicy: false,\n        hasVersions: false,\n        onError: noop,\n    };\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            isLoadingAccessStats: false,\n        };\n        const { logger } = this.props;\n        logger.onReadyMetric({\n            endMarkName: MARK_NAME_JS_READY,\n        });\n    }\n\n    componentDidMount() {\n        this.fetchFile();\n        if (this.props.hasAccessStats) {\n            this.fetchAccessStats();\n        }\n    }\n\n    componentDidUpdate({ hasAccessStats: prevHasAccessStats }: Props) {\n        const { hasAccessStats } = this.props;\n        // Component visibility props such as hasAccessStats can sometimes be flipped after an async call\n        const hasAccessStatsChanged = prevHasAccessStats !== hasAccessStats;\n        if (hasAccessStatsChanged) {\n            if (hasAccessStats) {\n                this.fetchAccessStats();\n            } else {\n                this.setState({\n                    isLoadingAccessStats: false,\n                    accessStats: undefined,\n                    accessStatsError: undefined,\n                });\n            }\n        }\n    }\n\n    /**\n     * File description update callback\n     *\n     * @private\n     * @param {BoxItem} file - Updated file object\n     * @return {void}\n     */\n    descriptionChangeSuccessCallback = (file: BoxItem): void => {\n        this.setState({ file, fileError: undefined });\n    };\n\n    /**\n     * Fetches a file with the fields needed for details sidebar\n     *\n     * @param {Function} successCallback - the success callback\n     * @param {Function} errorCallback - the error callback\n     * @return {void}\n     */\n    fetchFile(\n        successCallback: (file: BoxItem) => void = this.fetchFileSuccessCallback,\n        errorCallback: ElementsErrorCallback = this.fetchFileErrorCallback,\n    ): void {\n        const { api, fileId }: Props = this.props;\n        api.getFileAPI().getFile(fileId, successCallback, errorCallback, {\n            fields: SIDEBAR_FIELDS_TO_FETCH, // TODO: replace this with DETAILS_SIDEBAR_FIELDS_TO_FETCH as we do not need all the sidebar fields\n        });\n    }\n\n    /**\n     * Handles a successful file fetch\n     *\n     * @param {Object} file - the box file\n     * @return {void}\n     */\n    fetchFileSuccessCallback = (file: BoxItem) => {\n        this.setState({\n            file,\n            fileError: undefined,\n        });\n    };\n\n    /**\n     * Handles a failed file fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchFileErrorCallback = (e: ElementsXhrError, code: string) => {\n        // TODO: handle the error properly (probably with maskError) once files call split out\n        this.setState({\n            file: undefined,\n        });\n\n        this.props.onError(e, code, {\n            e,\n        });\n    };\n\n    /**\n     * Handles a failed file description update\n     *\n     * @private\n     * @param {BoxItem} file - Original file object\n     * @return {void}\n     */\n    descriptionChangeErrorCallback = (file: BoxItem): void => {\n        // Reset the state back to the original description since the API call failed\n        this.setState({\n            file,\n            fileError: {\n                inlineError: {\n                    title: messages.fileDescriptionInlineErrorTitleMessage,\n                    content: messages.defaultInlineErrorContentMessage,\n                },\n            },\n        });\n    };\n\n    /**\n     * Function to update file description\n     *\n     * @private\n     * @param {string} newDescription - New file description\n     * @return {void}\n     */\n    onDescriptionChange = (newDescription: string): void => {\n        const { api }: Props = this.props;\n        const { file }: State = this.state;\n        if (!file) {\n            throw getBadItemError();\n        }\n\n        const { description }: BoxItem = file;\n        if (newDescription === description) {\n            return;\n        }\n\n        api.getFileAPI().setFileDescription(\n            file,\n            newDescription,\n            this.descriptionChangeSuccessCallback,\n            this.descriptionChangeErrorCallback,\n        );\n    };\n\n    /**\n     * Handles a failed file access stats fetch\n     *\n     * @private\n     * @param {Error} e - API error\n     * @param {string} code - error code\n     * @return {void}\n     */\n    fetchAccessStatsErrorCallback = (e: ElementsXhrError, code: string) => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        const isForbidden = getProp(e, 'status') === HTTP_STATUS_CODE_FORBIDDEN;\n        let accessStatsError;\n\n        if (isForbidden) {\n            accessStatsError = {\n                error: messages.fileAccessStatsPermissionsError,\n            };\n        } else {\n            accessStatsError = {\n                maskError: {\n                    errorHeader: messages.fileAccessStatsErrorHeaderMessage,\n                    errorSubHeader: messages.defaultErrorMaskSubHeaderMessage,\n                },\n            };\n        }\n\n        this.setState({\n            isLoadingAccessStats: false,\n            accessStats: undefined,\n            accessStatsError,\n        });\n\n        this.props.onError(e, code, {\n            e,\n            [IS_ERROR_DISPLAYED]: !isForbidden,\n        });\n    };\n\n    /**\n     * File access stats fetch success callback\n     *\n     * @private\n     * @param {Object} accessStats - access stats for a file\n     * @return {void}\n     */\n    fetchAccessStatsSuccessCallback = (accessStats: FileAccessStats): void => {\n        if (!this.props.hasAccessStats) {\n            return;\n        }\n\n        this.setState({\n            accessStats,\n            accessStatsError: undefined,\n            isLoadingAccessStats: false,\n        });\n    };\n\n    /**\n     * Fetches the access stats for a file\n     *\n     * @private\n     * @return {void}\n     */\n    fetchAccessStats(): void {\n        const { api, fileId }: Props = this.props;\n        const { isLoadingAccessStats } = this.state;\n\n        if (isLoadingAccessStats) {\n            return;\n        }\n\n        this.setState({ isLoadingAccessStats: true });\n        api.getFileAccessStatsAPI(false).getFileAccessStats(\n            fileId,\n            this.fetchAccessStatsSuccessCallback,\n            this.fetchAccessStatsErrorCallback,\n        );\n    }\n\n    refresh(): void {\n        this.fetchAccessStats();\n    }\n\n    render() {\n        const {\n            classification,\n            elementId,\n            hasProperties,\n            hasNotices,\n            hasAccessStats,\n            hasClassification,\n            hasRetentionPolicy,\n            hasVersions,\n            onAccessStatsClick,\n            onVersionHistoryClick,\n            onClassificationClick,\n            onRetentionPolicyExtendClick,\n            retentionPolicy,\n        }: Props = this.props;\n\n        const { accessStats, accessStatsError, file, fileError, isLoadingAccessStats }: State = this.state;\n\n        // TODO: Add loading indicator and handle errors once file call is split out\n        return (\n            <SidebarContent\n                className=\"bcs-details\"\n                elementId={elementId}\n                sidebarView={SIDEBAR_VIEW_DETAILS}\n                title={<FormattedMessage {...messages.sidebarDetailsTitle} />}\n            >\n                {file && hasNotices && (\n                    <div className=\"bcs-DetailsSidebar-notices\">\n                        <SidebarNotices file={file} />\n                    </div>\n                )}\n                {file && hasClassification && (\n                    <SidebarClassification classification={classification} file={file} onEdit={onClassificationClick} />\n                )}\n                {file && hasAccessStats && (\n                    <SidebarAccessStats\n                        accessStats={accessStats}\n                        file={file}\n                        onAccessStatsClick={onAccessStatsClick}\n                        {...accessStatsError}\n                    />\n                )}\n                {file && hasProperties && (\n                    <SidebarSection\n                        interactionTarget={SECTION_TARGETS.FILE_PROPERTIES}\n                        title={<FormattedMessage {...messages.sidebarProperties} />}\n                    >\n                        {hasVersions && <SidebarVersions file={file} onVersionHistoryClick={onVersionHistoryClick} />}\n                        <SidebarFileProperties\n                            file={file}\n                            onDescriptionChange={this.onDescriptionChange}\n                            {...fileError}\n                            hasRetentionPolicy={hasRetentionPolicy}\n                            isLoading={isLoadingAccessStats}\n                            onRetentionPolicyExtendClick={onRetentionPolicyExtendClick}\n                            retentionPolicy={retentionPolicy}\n                        />\n                    </SidebarSection>\n                )}\n            </SidebarContent>\n        );\n    }\n}\n\nexport type DetailsSidebarProps = ExternalProps;\nexport { DetailsSidebar as DetailsSidebarComponent };\nexport default flow([withLogger(ORIGIN_DETAILS_SIDEBAR), withErrorBoundary(ORIGIN_DETAILS_SIDEBAR), withAPIContext])(\n    DetailsSidebar,\n);\n"],"sourceRoot":""}