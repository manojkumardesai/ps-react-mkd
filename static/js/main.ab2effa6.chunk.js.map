{"version":3,"sources":["../config/componentData.js","components/MDContentExplorer/MDContentExplorer.js","docs/examples/MDContentExplorer/MDContentExplorerExample.js","components/MDContentOpenWith/MDContentOpenWith.js","docs/examples/MDContentOpenWith/MDContentOpenWithExample.js","components/MDContentPicker/MDContentPicker.js","docs/examples/MDContentPicker/MDContentPickerExample.js","components/MDContentPreview/MDContentPreview.js","docs/examples/MDContentPreview/MDContentPreviewExample.js","components/MDContentSidebar/MDContentSidebar.js","docs/examples/MDContentSidebar/MDContentSidebarExample.js","components/MDContentUploader/MDContentUploader.js","docs/examples/MDContentUploader/MDContentUploaderExample.js","docs/examples sync /^/.//.*$","docs/Navigation.js","docs/CodeExample.js","docs/Example.js","docs/Props.js","docs/ComponentPage.js","docs/Docs.js","serviceWorker.js","index.js"],"names":["module","exports","MDContentExplorer","this","props","fileId","token","locale","React","Component","MDContentExplorerExample","MDContentOpenWith","MDContentPicker","folderId","rootFolderId","MDContentPreview","contentSidebarProps","detailsSidebarProps","hasAccessStats","hasClassification","hasNotices","hasProperties","hasRetentionPolicy","hasVersions","hasActivityFeed","hasMetadata","hasSkills","hasHeader","MDContentSidebar","MDContentUploader","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","Navigation","components","className","name","key","href","CodeExample","hljs","registerLanguage","javascript","highlightBlock","element","ref","children","Example","toggleCode","event","preventDefault","setState","prevState","showCode","state","example","description","ExampleComponent","require","componentName","default","onClick","Props","type","defaultValue","value","required","ComponentPage","component","examples","length","Docs","route","window","location","hash","substr","addEventListener","componentData","filter","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ab2effa6.chunk.js","sourcesContent":["module.exports = [{\"name\":\"MDContentExplorer\",\"description\":\"\",\"props\":{\"fileId\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"File id to be passed\"},\"token\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Token from Box Api to be passed\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { ContentExplorer } from 'box-ui-elements';\\nimport { IntlProvider } from 'react-intl';\\n\\nclass MDContentExplorer extends React.Component {\\n  render () {\\n      const {fileId, token } = this.props;\\n      return (\\n          <div>\\n              <IntlProvider locale=\\\"en\\\">\\n                <ContentExplorer\\n                    fileId={fileId}\\n                    token={token}\\n                    />\\n              </IntlProvider>\\n          </div>\\n      );\\n  }\\n}\\n\\nMDContentExplorer.propTypes = {\\n    /** File id to be passed */\\n    fileId: PropTypes.number.isRequired,\\n    /** Token from Box Api to be passed */\\n    token: PropTypes.string.isRequired\\n};\\n\\nexport default MDContentExplorer;\\n\",\"examples\":[{\"name\":\"MDContentExplorerExample\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport MDContentExplorer from 'ps-react-mkd/MDContentExplorer';\\n\\nexport default function MDContentExplorerExample () {\\n    return <MDContentExplorer fileId={0} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\\n}\"}]},{\"name\":\"MDContentOpenWith\",\"description\":\"\",\"props\":{\"fileId\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"File id to be passed\"},\"token\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Token from Box Api to be passed\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { ContentOpenWith } from 'box-ui-elements';\\nimport { IntlProvider } from 'react-intl';\\n\\nclass MDContentOpenWith extends React.Component {\\n  render () {\\n      const {fileId, token } = this.props;\\n      return (\\n          <div>\\n              <IntlProvider locale=\\\"en\\\">\\n                    <ContentOpenWith\\n                        fileId={fileId}\\n                        token={token}\\n                    />\\n                </IntlProvider>\\n          </div>\\n      );\\n  }\\n}\\n\\nMDContentOpenWith.propTypes = {\\n    /** File id to be passed */\\n    fileId: PropTypes.number.isRequired,\\n    /** Token from Box Api to be passed */\\n    token: PropTypes.string.isRequired\\n};\\n\\nexport default MDContentOpenWith;\\n\\n\\n\\n\",\"examples\":[{\"name\":\"MDContentOpenWithExample\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport MDContentOpenWith from 'ps-react-mkd/MDContentOpenWith';\\n\\nexport default function MDContentExplorerExample () {\\n    return <MDContentOpenWith fileId={0} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\\n}\"}]},{\"name\":\"MDContentPicker\",\"description\":\"\",\"props\":{\"folderId\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"File id to be passed\"},\"token\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Token from Box Api to be passed\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { ContentPicker } from 'box-ui-elements';\\nimport { IntlProvider } from 'react-intl';\\n\\nclass MDContentPicker extends React.Component {\\n  render () {\\n      const {folderId, token } = this.props;\\n      return (\\n          <div>\\n            <IntlProvider locale=\\\"en\\\">\\n                <ContentPicker\\n                    rootFolderId={folderId}\\n                    token={token}\\n                    {...this.props}\\n                />\\n            </IntlProvider>\\n          </div>\\n      );\\n  }\\n}\\n\\nMDContentPicker.propTypes = {\\n    /** File id to be passed */\\n    folderId: PropTypes.number.isRequired,\\n    /** Token from Box Api to be passed */\\n    token: PropTypes.string.isRequired\\n};\\n\\nexport default MDContentPicker;\\n\\n\\n\\n\",\"examples\":[{\"name\":\"MDContentPickerExample\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport MDContentPicker from 'ps-react-mkd/MDContentPicker';\\n\\nexport default function MDContentExplorerExample () {\\n    return <MDContentPicker folderId={117486422910} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\\n}\"}]},{\"name\":\"MDContentPreview\",\"description\":\"\",\"props\":{\"fileId\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"File id to be passed\"},\"token\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Token from Box Api to be passed\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { ContentPreview } from 'box-ui-elements';\\nimport { IntlProvider } from 'react-intl';\\n\\nclass MDContentPreview extends React.Component {\\n  render () {\\n      const {fileId, token } = this.props;\\n      return (\\n          <div>\\n            <IntlProvider locale=\\\"en\\\">\\n                <ContentPreview\\n                    contentSidebarProps={{\\n                        detailsSidebarProps: {\\n                            hasAccessStats: true,\\n                            hasClassification: true,\\n                            hasNotices: true,\\n                            hasProperties: true,\\n                            hasRetentionPolicy: true,\\n                            hasVersions: true,\\n                        },\\n                        hasActivityFeed: true,\\n                        hasMetadata: true,\\n                        hasSkills: true,\\n                        hasVersions: true,\\n                    }}\\n                    hasHeader={true}\\n                    fileId={fileId}\\n                    token={token}\\n                    {...this.props}\\n                />\\n            </IntlProvider>\\n          </div>\\n      );\\n  }\\n}\\n\\nMDContentPreview.propTypes = {\\n    /** File id to be passed */\\n    fileId: PropTypes.number.isRequired,\\n    /** Token from Box Api to be passed */\\n    token: PropTypes.string.isRequired\\n};\\n\\nexport default MDContentPreview;\\n\\n\",\"examples\":[{\"name\":\"MDContentPreviewExample\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport MDContentPreview from 'ps-react-mkd/MDContentPreview';\\n\\nexport default function MDContentExplorerExample () {\\n    return <MDContentPreview fileId={0} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\\n}\"}]},{\"name\":\"MDContentSidebar\",\"description\":\"\",\"props\":{\"fileId\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"File id to be passed\"},\"token\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Token from Box Api to be passed\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { ContentSidebar } from 'box-ui-elements';\\nimport { IntlProvider } from 'react-intl';\\n\\nclass MDContentSidebar extends React.Component {\\n  render () {\\n      const {fileId, token } = this.props;\\n      return (\\n          <div>\\n            <IntlProvider locale=\\\"en\\\">\\n                <ContentSidebar\\n                    fileId={fileId}\\n                    hasActivityFeed\\n                    hasMetadata\\n                    hasSkills\\n                    hasVersions\\n                    token={token}\\n                    {...this.props}\\n                />\\n            </IntlProvider>\\n          </div>\\n      );\\n  }\\n}\\n\\nMDContentSidebar.propTypes = {\\n    /** File id to be passed */\\n    fileId: PropTypes.number.isRequired,\\n    /** Token from Box Api to be passed */\\n    token: PropTypes.string.isRequired\\n};\\n\\nexport default MDContentSidebar;\\n\\n\",\"examples\":[{\"name\":\"MDContentSidebarExample\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport MDContentSidebar from 'ps-react-mkd/MDContentSidebar';\\n\\nexport default function MDContentExplorerExample () {\\n    return <MDContentSidebar fileId={0} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\\n}\"}]},{\"name\":\"MDContentUploader\",\"description\":\"\",\"props\":{\"folderId\":{\"type\":{\"name\":\"number\"},\"required\":true,\"description\":\"File id to be passed\"},\"token\":{\"type\":{\"name\":\"string\"},\"required\":true,\"description\":\"Token from Box Api to be passed\"}},\"code\":\"import React from 'react';\\nimport PropTypes from 'prop-types';\\nimport { ContentUploader } from 'box-ui-elements';\\nimport { IntlProvider } from 'react-intl';\\n\\nclass MDContentUploader extends React.Component {\\n  render () {\\n      const {folderId, token } = this.props;\\n      return (\\n          <div>\\n            <IntlProvider locale=\\\"en\\\">\\n                <ContentUploader\\n                    rootFolderId={folderId}\\n                    token={token}\\n                />\\n            </IntlProvider>\\n          </div>\\n      );\\n  }\\n}\\n\\nMDContentUploader.propTypes = {\\n    /** File id to be passed */\\n    folderId: PropTypes.number.isRequired,\\n    /** Token from Box Api to be passed */\\n    token: PropTypes.string.isRequired\\n};\\n\\nexport default MDContentUploader;\",\"examples\":[{\"name\":\"MDContentUploaderExample\",\"description\":\"\",\"code\":\"import React from 'react';\\nimport MDContentUploader from 'ps-react-mkd/MDContentUploader';\\n\\nexport default function MDContentExplorerExample () {\\n    return <MDContentUploader folderId={117486422910} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\\n}\"}]}]","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContentExplorer } from 'box-ui-elements';\nimport { IntlProvider } from 'react-intl';\n\nclass MDContentExplorer extends React.Component {\n  render () {\n      const {fileId, token } = this.props;\n      return (\n          <div>\n              <IntlProvider locale=\"en\">\n                <ContentExplorer\n                    fileId={fileId}\n                    token={token}\n                    />\n              </IntlProvider>\n          </div>\n      );\n  }\n}\n\nMDContentExplorer.propTypes = {\n    /** File id to be passed */\n    fileId: PropTypes.number.isRequired,\n    /** Token from Box Api to be passed */\n    token: PropTypes.string.isRequired\n};\n\nexport default MDContentExplorer;\n","import React from 'react';\nimport MDContentExplorer from 'ps-react-mkd/MDContentExplorer';\n\nexport default function MDContentExplorerExample () {\n    return <MDContentExplorer fileId={0} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContentOpenWith } from 'box-ui-elements';\nimport { IntlProvider } from 'react-intl';\n\nclass MDContentOpenWith extends React.Component {\n  render () {\n      const {fileId, token } = this.props;\n      return (\n          <div>\n              <IntlProvider locale=\"en\">\n                    <ContentOpenWith\n                        fileId={fileId}\n                        token={token}\n                    />\n                </IntlProvider>\n          </div>\n      );\n  }\n}\n\nMDContentOpenWith.propTypes = {\n    /** File id to be passed */\n    fileId: PropTypes.number.isRequired,\n    /** Token from Box Api to be passed */\n    token: PropTypes.string.isRequired\n};\n\nexport default MDContentOpenWith;\n\n\n\n","import React from 'react';\nimport MDContentOpenWith from 'ps-react-mkd/MDContentOpenWith';\n\nexport default function MDContentExplorerExample () {\n    return <MDContentOpenWith fileId={0} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContentPicker } from 'box-ui-elements';\nimport { IntlProvider } from 'react-intl';\n\nclass MDContentPicker extends React.Component {\n  render () {\n      const {folderId, token } = this.props;\n      return (\n          <div>\n            <IntlProvider locale=\"en\">\n                <ContentPicker\n                    rootFolderId={folderId}\n                    token={token}\n                    {...this.props}\n                />\n            </IntlProvider>\n          </div>\n      );\n  }\n}\n\nMDContentPicker.propTypes = {\n    /** File id to be passed */\n    folderId: PropTypes.number.isRequired,\n    /** Token from Box Api to be passed */\n    token: PropTypes.string.isRequired\n};\n\nexport default MDContentPicker;\n\n\n\n","import React from 'react';\nimport MDContentPicker from 'ps-react-mkd/MDContentPicker';\n\nexport default function MDContentExplorerExample () {\n    return <MDContentPicker folderId={117486422910} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContentPreview } from 'box-ui-elements';\nimport { IntlProvider } from 'react-intl';\n\nclass MDContentPreview extends React.Component {\n  render () {\n      const {fileId, token } = this.props;\n      return (\n          <div>\n            <IntlProvider locale=\"en\">\n                <ContentPreview\n                    contentSidebarProps={{\n                        detailsSidebarProps: {\n                            hasAccessStats: true,\n                            hasClassification: true,\n                            hasNotices: true,\n                            hasProperties: true,\n                            hasRetentionPolicy: true,\n                            hasVersions: true,\n                        },\n                        hasActivityFeed: true,\n                        hasMetadata: true,\n                        hasSkills: true,\n                        hasVersions: true,\n                    }}\n                    hasHeader={true}\n                    fileId={fileId}\n                    token={token}\n                    {...this.props}\n                />\n            </IntlProvider>\n          </div>\n      );\n  }\n}\n\nMDContentPreview.propTypes = {\n    /** File id to be passed */\n    fileId: PropTypes.number.isRequired,\n    /** Token from Box Api to be passed */\n    token: PropTypes.string.isRequired\n};\n\nexport default MDContentPreview;\n\n","import React from 'react';\nimport MDContentPreview from 'ps-react-mkd/MDContentPreview';\n\nexport default function MDContentExplorerExample () {\n    return <MDContentPreview fileId={0} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContentSidebar } from 'box-ui-elements';\nimport { IntlProvider } from 'react-intl';\n\nclass MDContentSidebar extends React.Component {\n  render () {\n      const {fileId, token } = this.props;\n      return (\n          <div>\n            <IntlProvider locale=\"en\">\n                <ContentSidebar\n                    fileId={fileId}\n                    hasActivityFeed\n                    hasMetadata\n                    hasSkills\n                    hasVersions\n                    token={token}\n                    {...this.props}\n                />\n            </IntlProvider>\n          </div>\n      );\n  }\n}\n\nMDContentSidebar.propTypes = {\n    /** File id to be passed */\n    fileId: PropTypes.number.isRequired,\n    /** Token from Box Api to be passed */\n    token: PropTypes.string.isRequired\n};\n\nexport default MDContentSidebar;\n\n","import React from 'react';\nimport MDContentSidebar from 'ps-react-mkd/MDContentSidebar';\n\nexport default function MDContentExplorerExample () {\n    return <MDContentSidebar fileId={0} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ContentUploader } from 'box-ui-elements';\nimport { IntlProvider } from 'react-intl';\n\nclass MDContentUploader extends React.Component {\n  render () {\n      const {folderId, token } = this.props;\n      return (\n          <div>\n            <IntlProvider locale=\"en\">\n                <ContentUploader\n                    rootFolderId={folderId}\n                    token={token}\n                />\n            </IntlProvider>\n          </div>\n      );\n  }\n}\n\nMDContentUploader.propTypes = {\n    /** File id to be passed */\n    folderId: PropTypes.number.isRequired,\n    /** Token from Box Api to be passed */\n    token: PropTypes.string.isRequired\n};\n\nexport default MDContentUploader;","import React from 'react';\nimport MDContentUploader from 'ps-react-mkd/MDContentUploader';\n\nexport default function MDContentExplorerExample () {\n    return <MDContentUploader folderId={117486422910} token={'4NFvfIajj5SChgMtsBYMsIGeZqm9fN2w'} />\n}","var map = {\n\t\"./MDContentExplorer/MDContentExplorerExample\": 326,\n\t\"./MDContentExplorer/MDContentExplorerExample.js\": 326,\n\t\"./MDContentOpenWith/MDContentOpenWithExample\": 327,\n\t\"./MDContentOpenWith/MDContentOpenWithExample.js\": 327,\n\t\"./MDContentPicker/MDContentPickerExample\": 328,\n\t\"./MDContentPicker/MDContentPickerExample.js\": 328,\n\t\"./MDContentPreview/MDContentPreviewExample\": 329,\n\t\"./MDContentPreview/MDContentPreviewExample.js\": 329,\n\t\"./MDContentSidebar/MDContentSidebarExample\": 330,\n\t\"./MDContentSidebar/MDContentSidebarExample.js\": 330,\n\t\"./MDContentUploader/MDContentUploaderExample\": 331,\n\t\"./MDContentUploader/MDContentUploaderExample.js\": 331\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 362;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navigation = ({components}) => {\n  return (\n    <ul className=\"navigation\">\n      {\n        components.map( name => {\n          return (\n            <li key={name}>\n              <a href={`#${name}`}>{name}</a>\n            </li>\n          )\n        })\n      }\n    </ul>\n  )\n}\n\nNavigation.propTypes = {\n  components: PropTypes.array.isRequired\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hljs from 'highlight.js/lib/highlight'\nimport javascript from 'highlight.js/lib/languages/javascript'\n\n// This way is easy, but adds 170K gzipped to bundle since all langs are included.\n// import Highlight from 'react-highlight';\n\nclass CodeExample extends React.Component {\n  componentDidMount() {\n    hljs.registerLanguage('javascript', javascript);\n    hljs.highlightBlock(this.element);\n  }\n\n  render() {\n    return (\n      <pre ref={ref => { this.element = ref }}>\n        <code>\n          {this.props.children}\n        </code>\n      </pre>\n    )\n  }\n}\n\nCodeExample.propTypes = {\n  children: PropTypes.string.isRequired\n}\n\nexport default CodeExample;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodeExample from './CodeExample';\n\nclass Example extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { showCode: false };\n  }\n\n  toggleCode = event => {\n    event.preventDefault();\n    this.setState(prevState => {\n      return {showCode: !prevState.showCode};\n    });\n  }\n\n  render() {\n    const {showCode} = this.state;\n    const {code, description, name} = this.props.example;\n    // Must use CommonJS require to dynamically require because ES Modules must be statically analyzable.\n    const ExampleComponent = require(`./examples/${this.props.componentName}/${name}`).default;\n    return (\n      <div className=\"example\">\n        {description && <h4>{description}</h4> }\n\n        <ExampleComponent />\n\n        <p>\n          <button onClick={this.toggleCode}>\n            {showCode ? \"Hide\" : \"Show\"} Code\n          </button>\n        </p>\n\n        {showCode && <CodeExample>{code}</CodeExample>}\n      </div>\n    )\n  }\n}\n\nExample.propTypes = {\n  example: PropTypes.object.isRequired,\n  componentName: PropTypes.string.isRequired\n}\n\nexport default Example;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Props = ({props}) => {\n  return (\n    <table className=\"props\">\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Description</th>\n          <th>Type</th>\n          <th>Default</th>\n          <th>Required</th>\n        </tr>\n      </thead>\n      <tbody>\n      {\n        Object.keys(props).map(key => {\n          return (\n            <tr key={key}>\n              <td>{key}</td>\n              <td>{props[key].description}</td>\n              <td>{props[key].type.name}</td>\n              <td>{props[key].defaultValue && props[key].defaultValue.value}</td>\n              <td>{props[key].required && \"X\"}</td>\n            </tr>\n          );\n        })\n      }\n      </tbody>\n    </table>\n  )\n}\n\nProps.propTypes = {\n  props: PropTypes.object.isRequired\n};\n\nexport default Props;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Example from './Example';\nimport Props from './Props';\n\nconst ComponentPage = ({component}) => {\n  const {name, description, props, examples} = component;\n\n  return (\n    <div className=\"componentpage\">\n      <h2>{name}</h2>\n      <p>{description}</p>\n\n      <h3>Example{examples.length > 1 && \"s\"}</h3>\n      {\n        examples.length > 0 ?\n        examples.map( example => <Example key={example.name} example={example} componentName={name} /> ) :\n        \"No examples exist.\"\n      }\n\n      <h3>Props</h3>\n      {\n        props ?\n        <Props props={props} /> :\n        \"This component accepts no props.\"\n      }\n    </div>\n  )\n};\n\nComponentPage.propTypes = {\n  component: PropTypes.object.isRequired\n};\n\nexport default ComponentPage;","import React from 'react';\nimport Navigation from './Navigation';\nimport ComponentPage from './ComponentPage';\nimport componentData from '../../config/componentData';\n\nexport default class Docs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      route: window.location.hash.substr(1)\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('hashchange', () => {\n      this.setState({route: window.location.hash.substr(1)})\n    })\n  }\n\n  render() {\n    const {route} = this.state;\n    const component = route ? componentData.filter( component => component.name === route)[0] : componentData[0];\n\n    return (\n      <div>\n        <Navigation components={componentData.map(component => component.name)} />\n        <ComponentPage component={component} />\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/highlight.js/styles/ocean.css';\nimport Docs from './docs/Docs';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Docs />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}